{"version":3,"file":"three.module.ar.js","sources":["../src/ARDebug.js","../src/ARPerspectiveCamera.js","../src/loaders.js","../src/ARUtils.js","../src/ARReticle.js","../src/ARView.js","../src/ARSpeechRecognition.js","../src/index.js"],"sourcesContent":["/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DEFAULTS = {\n  open: true,\n  showLastHit: true,\n  showPoseStatus: true,\n};\n\nconst SUCCESS_COLOR = '#00ff00';\nconst FAILURE_COLOR = '#ff0077';\n\n// A cache to store original native VRDisplay methods\n// since WebARonARKit does not provide a VRDisplay.prototype[method],\n// and assuming the first time ARDebug proxies a method is the\n// 'native' version, this caches the correct method if we proxy a method twice\nlet cachedVRDisplayMethods = new Map();\n\n/**\n * A throttle function to limit number of DOM writes\n * in the ARDebug view.\n *\n * @param {Function} fn\n * @param {number} timer\n * @param {Object} scope\n *\n * @return {Function}\n */\nfunction throttle(fn, timer, scope) {\n  let lastFired;\n  let timeout;\n\n  return (...args) => {\n    const current = +new Date();\n    let until;\n\n    if (lastFired) {\n      until = lastFired + timer - current;\n    }\n\n    if (until == undefined || until < 0) {\n      lastFired = current;\n      fn.apply(scope, args);\n    } else if (until >= 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        lastFired = current;\n        fn.apply(scope, args);\n      }, until);\n    }\n  };\n}\n/**\n * Class for creating a mesh that fires raycasts and lerps\n * a 3D object along the surface\n */\nclass ARDebug {\n  /**\n   * @param {VRDisplay} vrDisplay\n   * @param {Object} config\n   * @param {boolean} config.open\n   * @param {boolean} config.showLastHit\n   * @param {boolean} config.showPoseStatus\n   */\n  constructor(vrDisplay, config={}) {\n    this.config = Object.assign({}, config, DEFAULTS);\n    this.vrDisplay = vrDisplay;\n\n    this._view = new ARDebugView({ open: this.config.open });\n\n    if (this.config.showLastHit && this.vrDisplay.hitTest) {\n      this._view.addRow('hit-test', new ARDebugHitTestRow(vrDisplay));\n    }\n\n    if (this.config.showPoseStatus && this.vrDisplay.getFrameData) {\n      this._view.addRow('pose-status', new ARDebugPoseRow(vrDisplay));\n    }\n  }\n\n  /**\n   * Opens the debug panel.\n   */\n  open() {\n    this._view.open();\n  }\n\n  /**\n   * Closes the debug panel.\n   */\n  close() {\n    this._view.close();\n  }\n\n  /**\n   * Returns the root DOM element for the panel.\n   *\n   * @return {HTMLElement}\n   */\n  getElement() {\n    return this._view.getElement();\n  }\n}\n\n/**\n * An implementation that interfaces with the DOM, used\n * by ARDebug\n */\nclass ARDebugView {\n  /**\n   * @param {Object} config\n   * @param {boolean} config.open\n   */\n  constructor(config={}) {\n    this.rows = new Map();\n\n    this.el = document.createElement('div');\n    this.el.style.backgroundColor = '#333';\n    this.el.style.padding = '5px';\n    this.el.style.fontFamily = 'Roboto, Ubuntu, Arial, sans-serif';\n    this.el.style.color = 'rgb(165, 165, 165)';\n    this.el.style.position = 'absolute';\n    this.el.style.right = '20px';\n    this.el.style.top = '0px';\n    this.el.style.width = '200px';\n    this.el.style.fontSize = '12px';\n    this.el.style.zIndex = 9999;\n\n    this._rowsEl = document.createElement('div');\n    this._rowsEl.style.transitionProperty = 'max-height';\n    this._rowsEl.style.transitionDuration = '0.5s';\n    this._rowsEl.style.transitionDelay = '0s';\n    this._rowsEl.style.transitionTimingFunction = 'ease-out';\n    this._rowsEl.style.overflow = 'hidden';\n\n    this._controls = document.createElement('div');\n    this._controls.style.fontSize = '13px';\n    this._controls.style.fontWeight = 'bold';\n    this._controls.style.paddingTop = '5px';\n    this._controls.style.textAlign = 'center';\n    this._controls.style.cursor = 'pointer';\n    this._controls.addEventListener('click', this.toggleControls.bind(this));\n\n    // Initialize the view as open or closed\n    config.open ? this.open() : this.close();\n\n    this.el.appendChild(this._rowsEl);\n    this.el.appendChild(this._controls);\n  }\n\n  /**\n   * Toggles between open and close modes.\n   */\n  toggleControls() {\n    if (this._isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Opens the debugging panel.\n   */\n  open() {\n    // Use max-height with large value to transition\n    // to/from a non-specific height (like auto/100%)\n    // https://stackoverflow.com/a/8331169\n    // @TODO investigate a more complete solution with correct timing,\n    // via something like http://n12v.com/css-transition-to-from-auto/\n    this._rowsEl.style.maxHeight = '100px';\n    this._isOpen = true;\n    this._controls.textContent = 'Close ARDebug';\n    for (let [, row] of this.rows) {\n      row.enable();\n    }\n  }\n\n  /**\n   * Closes the debugging panel.\n   */\n  close() {\n    this._rowsEl.style.maxHeight = '0px';\n    this._isOpen = false;\n    this._controls.textContent = 'Open ARDebug';\n    for (let [, row] of this.rows) {\n      row.disable();\n    }\n  }\n\n  /**\n   * Returns the ARDebugView root element.\n   *\n   * @return {HTMLElement}\n   */\n  getElement() {\n    return this.el;\n  }\n\n  /**\n   * Adds a row to the ARDebugView.\n   *\n   * @param {string} id\n   * @param {ARDebugRow} row\n   */\n  addRow(id, row) {\n    this.rows.set(id, row);\n\n    if (this._isOpen) {\n      row.enable();\n    }\n\n    this._rowsEl.appendChild(row.getElement());\n  }\n}\n\n/**\n * A class that implements features being a row in the ARDebugView.\n */\nclass ARDebugRow {\n  /**\n   * @param {string} title\n   */\n  constructor(title) {\n    this.el = document.createElement('div');\n    this.el.style.width = '100%';\n    this.el.style.borderTop = '1px solid rgb(54, 54, 54)';\n    this.el.style.borderBottom = '1px solid #14171A';\n    this.el.style.position = 'relative';\n    this.el.style.padding = '3px 0px';\n    this.el.style.overflow = 'hidden';\n\n    this._titleEl = document.createElement('span');\n    this._titleEl.style.fontWeight = 'bold';\n    this._titleEl.textContent = title;\n\n    this._dataEl = document.createElement('span');\n    this._dataEl.style.position = 'absolute';\n    this._dataEl.style.left = '40px';\n\n    // Create a text element to update so we can avoid\n    // forced reflows when updating\n    // https://stackoverflow.com/a/17203046\n    this._dataElText = document.createTextNode('');\n    this._dataEl.appendChild(this._dataElText);\n\n    this.el.appendChild(this._titleEl);\n    this.el.appendChild(this._dataEl);\n\n    this.update = throttle(this.update, 500, this);\n  }\n\n  /**\n   * Enables the proxying and inspection functionality of\n   * this row. Should be implemented by child class.\n   */\n  enable() {\n    throw new Error('Implement in child class');\n  }\n\n  /**\n   * Disables the proxying and inspection functionality of\n   * this row. Should be implemented by child class.\n   */\n  disable() {\n    throw new Error('Implement in child class');\n  }\n\n  /**\n   * Returns the ARDebugRow's root element.\n   *\n   * @return {HTMLElement}\n   */\n  getElement() {\n    return this.el;\n  }\n\n  /**\n   * Updates the row's value.\n   *\n   * @param {string} value\n   * @param {boolean} isSuccess\n   */\n  update(value, isSuccess) {\n    this._dataElText.nodeValue = value;\n    this._dataEl.style.color = isSuccess ? SUCCESS_COLOR : FAILURE_COLOR;\n  }\n}\n\n/**\n * The ARDebugRow subclass for displaying hit information\n * by wrapping `vrDisplay.hitTest` and displaying the results.\n */\nclass ARDebugHitTestRow extends ARDebugRow {\n  /**\n   * @param {VRDisplay} vrDisplay\n   */\n  constructor(vrDisplay) {\n    super('Hit');\n    this.vrDisplay = vrDisplay;\n    this._onHitTest = this._onHitTest.bind(this);\n\n    // Store the native hit test, or proxy the native `hitTest` call with our own\n    this._nativeHitTest = cachedVRDisplayMethods.get('hitTest') || this.vrDisplay.hitTest;\n    cachedVRDisplayMethods.set('hitTest', this._nativeHitTest);\n\n    this._didPreviouslyHit = null;\n  }\n\n  /**\n   * Enables the tracking of hit test information.\n   */\n  enable() {\n    this.vrDisplay.hitTest = this._onHitTest;\n  }\n\n  /**\n   * Disables the tracking of hit test information.\n   */\n  disable() {\n    this.vrDisplay.hitTest = this._nativeHitTest;\n  }\n\n  /**\n   * @param {VRHit} hit\n   * @return {string}\n   */\n  _hitToString(hit) {\n    const mm = hit.modelMatrix;\n    return `${mm[12].toFixed(2)}, ${mm[13].toFixed(2)}, ${mm[14].toFixed(2)}`;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @return {VRHit?}\n   */\n  _onHitTest(x, y) {\n    const hits = this._nativeHitTest.call(this.vrDisplay, x, y);\n\n    const t = (parseInt(performance.now(), 10) / 1000).toFixed(1);\n    const didHit = hits && hits.length;\n\n    this.update(`${didHit ? this._hitToString(hits[0]) : 'MISS'} @ ${t}s`, didHit);\n    this._didPreviouslyHit = didHit;\n    return hits;\n  }\n}\n\n/**\n * The ARDebugRow subclass for displaying pose information\n * by wrapping `vrDisplay.getFrameData` and displaying the results.\n */\nclass ARDebugPoseRow extends ARDebugRow {\n  /**\n   * @param {VRDisplay} vrDisplay\n   */\n  constructor(vrDisplay) {\n    super('Pose');\n    this.vrDisplay = vrDisplay;\n    this._onGetFrameData = this._onGetFrameData.bind(this);\n\n    // Store the native hit test, or proxy the native `hitTest` call with our own\n    this._nativeGetFrameData = cachedVRDisplayMethods.get('getFrameData') ||\n                               this.vrDisplay.getFrameData;\n    cachedVRDisplayMethods.set('getFrameData', this._nativeGetFrameData);\n\n    this.update('Looking for position...');\n    this._initialPose = false;\n  }\n\n  /**\n   * Enables displaying and pulling getFrameData\n   */\n  enable() {\n    this.vrDisplay.getFrameData = this._onGetFrameData;\n  }\n\n  /**\n   * Disables displaying and pulling getFrameData\n   */\n  disable() {\n    this.vrDisplay.getFrameData = this._nativeGetFrameData;\n  }\n\n  /**\n   * @param {VRPose} pose\n   * @return {string}\n   */\n  _poseToString(pose) {\n    return `${pose[0].toFixed(2)}, ${pose[1].toFixed(2)}, ${pose[2].toFixed(2)}`;\n  }\n\n  /**\n   * Wrapper around getFrameData\n   *\n   * @param {VRFrameData} frameData\n   * @return {boolean}\n   */\n  _onGetFrameData(frameData) {\n    const results = this._nativeGetFrameData.call(this.vrDisplay, frameData);\n    const pose = frameData && frameData.pose && frameData.pose.position;\n    // Ensure we have a valid pose; while the pose SHOULD be null when not\n    // provided by the VRDisplay, on WebARonARCore, the xyz values of position\n    // are all 0 -- mark this as an invalid pose\n    const isValidPose = pose &&\n                        typeof pose[0] === 'number' &&\n                        typeof pose[1] === 'number' &&\n                        typeof pose[2] === 'number' &&\n                        !(pose[0] === 0 && pose[1] === 0 && pose[2] === 0);\n\n    // If we haven't received a pose yet, and still don't have a valid pose\n    // leave the message how it is\n    if (!this._initialPose && !isValidPose) {\n      return results;\n    }\n\n    if (isValidPose) {\n      this.update(this._poseToString(pose), true);\n    } else if (!isValidPose && this._lastPoseValid !== false) {\n      this.update(`Position lost`, false);\n    }\n\n    this._lastPoseValid = isValidPose;\n    this._initialPose = true;\n\n    return results;\n  }\n}\n\n\n// THREE.ARDebug = ARDebug;\nexport { ARDebug };\n","/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PerspectiveCamera } from 'three';\n\n// Reuse the frame data for getting the projection matrix\nlet frameData;\n\n/**\n * Class extending a THREE.PerspectiveCamera, attempting\n * to use the projection matrix provided from an AR-enabled\n * VRDisplay. If no AR-enabled VRDisplay found, uses provided\n * parameters.\n */\nclass ARPerspectiveCamera extends PerspectiveCamera {\n  /**\n   * @param {VRDisplay} vrDisplay\n   * @param {number} fov\n   * @param {number} aspect\n   * @param {number} near\n   * @param {number} far\n   */\n  constructor(vrDisplay, fov, aspect, near, far) {\n    super(fov, aspect, near, far);\n    this.isARPerpsectiveCamera = true;\n    this.vrDisplay = vrDisplay;\n    this.updateProjectionMatrix();\n\n    if (!vrDisplay || !vrDisplay.capabilities.hasPassThroughCamera) {\n      console.warn(`ARPerspectiveCamera does not a VRDisplay with\n                    a pass through camera. Using supplied values and defaults\n                    instead of device camera intrinsics`);\n    }\n  }\n\n  /**\n   * Updates the underlying `projectionMatrix` property from\n   * the AR-enabled VRDisplay, or falls back to\n   * THREE.PerspectiveCamera.prototype.updateProjectionMatrix\n   */\n  updateProjectionMatrix() {\n    const projMatrix = this.getProjectionMatrix();\n    if (!projMatrix) {\n      super.updateProjectionMatrix();\n      return;\n    }\n\n    this.projectionMatrix.fromArray(projMatrix);\n  }\n\n  /**\n   * Gets the projection matrix from AR-enabled VRDisplay\n   * if possible.\n   * @return {!Float32Array}\n   */\n  getProjectionMatrix() {\n    if (this.vrDisplay && this.vrDisplay.getFrameData) {\n      if (!frameData) {\n        frameData = new VRFrameData();\n      }\n      this.vrDisplay.getFrameData(frameData);\n\n      // Can use either left or right projection matrix\n      return frameData.leftProjectionMatrix;\n    }\n    return null;\n  }\n}\n\n\n// THREE.ARPerspectiveCamera = ARPerspectiveCamera;\nexport { ARPerspectiveCamera };\n","/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OBJLoader, MTLLoader } from 'three';\n\n/**\n * This module contains promisified loaders for internal use for\n * exposed ARUtils.\n */\n\nconst noop = function() {};\n\nexport const loadObj = (objPath, materials) => new Promise((resolve, reject) => {\n  const loader = new OBJLoader();\n\n  if (materials) {\n    loader.setMaterials(materials);\n  }\n\n  loader.load(objPath, resolve, noop, reject);\n});\n\nexport const loadMtl = mtlPath => new Promise((resolve, reject) => {\n  const loader = new MTLLoader();\n  const pathChunks = mtlPath.split('/');\n\n  if (pathChunks.length >= 2) {\n    loader.setTexturePath(pathChunks[pathChunks.length - 2]);\n  }\n\n  loader.load(mtlPath, resolve, noop, reject);\n});\n","/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Matrix4,\n  Vector3,\n  Quaternion,\n  Math,\n} from 'three';\nimport { loadMtl, loadObj } from './loaders';\n\nconst LEARN_MORE_LINK = 'https://developers.google.com/ar/develop/web/getting-started';\nconst UNSUPPORTED_MESSAGE = `This augmented reality experience requires\n  WebARonARCore or WebARonARKit, experimental browsers from Google\n  for Android and iOS. Learn more at the <a href=\"${LEARN_MORE_LINK}\">Google Developers site</a>.`;\n\nconst ARUtils = {};\n\nARUtils.isTango = display =>\n  display && display.displayName.toLowerCase().includes('tango');\nexport const isTango = ARUtils.isTango;\n\nARUtils.isARKit = display =>\n  display && display.displayName.toLowerCase().includes('arkit');\nexport const isARKit = ARUtils.isARKit;\n\nARUtils.isARDisplay = display => isARKit(display) || isTango(display);\nexport const isARDisplay = ARUtils.isARDisplay;\n\n/**\n * Returns a promise that resolves to either to a VRDisplay with\n * AR capabilities, or null if no valid AR devices found on the platform.\n *\n * @return {Promise<VRDisplay?>}\n */\nARUtils.getARDisplay = () => new Promise((resolve, reject) => {\n  if (!navigator.getVRDisplays) {\n    resolve(null);\n    return;\n  }\n\n  navigator.getVRDisplays().then(displays => {\n    if (!displays && displays.length === 0) {\n      resolve(null);\n      return;\n    }\n\n    for (let display of displays) {\n      if (isARDisplay(display)) {\n        resolve(display);\n        return;\n      }\n    }\n    resolve(null);\n  });\n});\nexport const getARDisplay = ARUtils.getARDisplay;\n\n/**\n * Takes a path for an OBJ model and optionally a path for an MTL\n * texture and returns a promise resolving to a THREE.Mesh loaded with\n * the appropriate material. Can be used on downloaded models from Blocks.\n *\n * @param {string} objPath\n * @param {string} mtlPath\n * @return {THREE.Mesh}\n */\nARUtils.loadBlocksModel = (objPath, mtlPath) => new Promise((resolve, reject) => {\n  if (!THREE.OBJLoader || !THREE.MTLLoader) {\n    reject(new Error('Must include THREE.OBJLoader and THREE.MTLLoader'));\n    return;\n  }\n\n  let p = Promise.resolve();\n\n  if (mtlPath) {\n    p = loadMtl(mtlPath);\n  }\n\n  p.then(materials => {\n    if (materials) {\n      materials.preload();\n    }\n    return loadObj(objPath, materials);\n  }).then(obj => {\n    const model = obj.children[0];\n    model.geometry.applyMatrix(\n      new Matrix4().makeRotationY(Math.degToRad(-90))\n    );\n\n    return model;\n  }).then(resolve, reject);\n});\nexport const loadBlocksModel = ARUtils.loadBlocksModel;\n\nconst model = new Matrix4();\nconst tempPos = new Vector3();\nconst tempQuat = new Quaternion();\nconst tempScale = new Vector3();\n\n/**\n * Takes a THREE.Object3D and a VRHit and positions and optionally orients\n * the object according to the transform of the VRHit. Can provide an\n * easing value between 0 and 1 corresponding to the lerp between the\n * object's current position/orientation, and the position/orientation of the\n * hit.\n *\n * @param {THREE.Object3D} object\n * @param {VRHit} hit\n * @param {number} easing\n * @param {boolean} applyOrientation\n */\nARUtils.placeObjectAtHit = (object, hit, easing=1, applyOrientation=false) => {\n  if (!hit || !hit.modelMatrix) {\n    throw new Error('placeObjectAtHit requires a VRHit object');\n  }\n\n  model.fromArray(hit.modelMatrix);\n\n  model.decompose(tempPos, tempQuat, tempScale);\n\n  if (easing === 1) {\n    object.position.copy(tempPos);\n    if (applyOrientation) {\n      object.quaternion.copy(tempQuat);\n    }\n  } else {\n    object.position.lerp(tempPos, easing);\n    if (applyOrientation) {\n      object.quaternion.slerp(tempQuat, easing);\n    }\n  }\n};\nexport const placeObjectAtHit = ARUtils.placeObjectAtHit;\n\n/**\n * Injects a DOM element into the current page prompting the user that\n * their browser does not support these AR features.\n */\nARUtils.displayUnsupportedMessage = () => {\n  const element = document.createElement('div');\n  element.id = 'webgl-error-message';\n  element.style.fontFamily = 'monospace';\n  element.style.fontSize = '13px';\n  element.style.fontWeight = 'normal';\n  element.style.textAlign = 'center';\n  element.style.background = '#fff';\n  element.style.border = '1px solid black';\n  element.style.color = '#000';\n  element.style.padding = '1.5em';\n  element.style.width = '400px';\n  element.style.margin = '5em auto 0';\n  element.innerHTML = UNSUPPORTED_MESSAGE;\n  document.body.appendChild(element);\n};\nexport const displayUnsupportedMessage = ARUtils.displayUnsupportedMessage;\n\n\nexport { ARUtils };\n","/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Mesh,\n  Vector3,\n  RingGeometry,\n  MeshBasicMaterial,\n  Matrix4,\n  Math,\n} from 'three';\nimport { placeObjectAtHit } from './ARUtils';\n\n/**\n * Class for creating a mesh that fires raycasts and lerps\n * a 3D object along the surface\n */\nclass ARReticle extends Mesh {\n  /**\n   * @param {VRDisplay} vrDisplay\n   * @param {number} innerRadius\n   * @param {number} outerRadius\n   * @param {number} color\n   * @param {number} easing\n   */\n  constructor(\n    vrDisplay,\n    innerRadius = 0.02,\n    outerRadius = 0.05,\n    color = 0xff0077,\n    easing = 0.25\n  ) {\n    const geometry = new RingGeometry(innerRadius, outerRadius, 36, 64);\n    const material = new MeshBasicMaterial({ color });\n\n    // Orient the geometry so it's position is flat on a horizontal surface\n    geometry.applyMatrix(new Matrix4().makeRotationX(Math.degToRad(-90)));\n\n    super(geometry, material);\n    this.visible = false;\n\n    this.easing = easing;\n    this.applyOrientation = true;\n    this.vrDisplay = vrDisplay;\n    this._planeDir = new Vector3();\n  }\n\n  /**\n   * Attempt to fire a raycast from normalized screen coordinates\n   * x and y and lerp the reticle to the position.\n   *\n   * @param {number} x\n   * @param {number} y\n   */\n  update(x = 0.5, y = 0.5) {\n    if (!this.vrDisplay || !this.vrDisplay.hitTest) {\n      return;\n    }\n\n    const hit = this.vrDisplay.hitTest(x, y);\n    if (hit && hit.length > 0) {\n      this.visible = true;\n      placeObjectAtHit(this, hit[0], this.applyOrientation, this.easing);\n    }\n  }\n}\n\n\n// THREE.ARReticle = ARReticle;\nexport { ARReticle };\n","/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isARKit } from './ARUtils';\nimport vertexSource from './shaders/arview.vert';\nimport fragmentSource from './shaders/arview.frag';\n\n/**\n * Creates and load a shader from a string, type specifies either 'vertex' or 'fragment'\n *\n * @param {WebGLRenderingContext} gl\n * @param {string} str\n * @param {string} type\n * @return {!WebGLShader}\n */\nfunction getShader(gl, str, type) {\n  let shader;\n  if (type == 'fragment') {\n    shader = gl.createShader(gl.FRAGMENT_SHADER);\n  } else if (type == 'vertex') {\n    shader = gl.createShader(gl.VERTEX_SHADER);\n  } else {\n    return null;\n  }\n\n  gl.shaderSource(shader, str);\n  gl.compileShader(shader);\n\n  const result = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (!result) {\n    alert(gl.getShaderInfoLog(shader));\n    return null;\n  }\n\n  return shader;\n}\n\n/**\n * Creates a shader program from vertex and fragment shader sources\n *\n * @param {WebGLRenderingContext} gl\n * @param {string} vs\n * @param {string} fs\n * @return {!WebGLProgram}\n */\nfunction getProgram(gl, vs, fs) {\n  const vertexShader = getShader(gl, vs, 'vertex');\n  const fragmentShader = getShader(gl, fs, 'fragment');\n  if (!fragmentShader) {\n    return null;\n  }\n\n  const shaderProgram = gl.createProgram();\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n\n  const result = gl.getProgramParameter(shaderProgram, gl.LINK_STATUS);\n  if (!result) {\n    alert('Could not initialise arview shaders');\n  }\n\n  return shaderProgram;\n}\n\n/**\n * Calculate the correct orientation depending on the device and the camera\n * orientations.\n *\n * @param {number} screenOrientation\n * @param {number} seeThroughCameraOrientation\n * @return {number}\n */\nfunction combineOrientations(screenOrientation, seeThroughCameraOrientation) {\n  let seeThroughCameraOrientationIndex = 0;\n  switch (seeThroughCameraOrientation) {\n    case 90:\n      seeThroughCameraOrientationIndex = 1;\n      break;\n    case 180:\n      seeThroughCameraOrientationIndex = 2;\n      break;\n    case 270:\n      seeThroughCameraOrientationIndex = 3;\n      break;\n    default:\n      seeThroughCameraOrientationIndex = 0;\n      break;\n  }\n  let screenOrientationIndex = 0;\n  switch (screenOrientation) {\n    case 90:\n      screenOrientationIndex = 1;\n      break;\n    case 180:\n      screenOrientationIndex = 2;\n      break;\n    case 270:\n      screenOrientationIndex = 3;\n      break;\n    default:\n      screenOrientationIndex = 0;\n      break;\n  }\n  let ret = screenOrientationIndex - seeThroughCameraOrientationIndex;\n  if (ret < 0) {\n    ret += 4;\n  }\n  return ret % 4;\n}\n\n/**\n * Renders the ar camera's video texture\n */\nclass ARVideoRenderer {\n  /**\n   * @param {VRDisplay} vrDisplay\n   * @param {WebGLRenderingContext} gl\n   */\n  constructor(vrDisplay, gl) {\n    this.vrDisplay = vrDisplay;\n    this.gl = gl;\n    if (this.vrDisplay) {\n      this.passThroughCamera = vrDisplay.getPassThroughCamera();\n      this.program = getProgram(gl, vertexSource, fragmentSource);\n    }\n\n    gl.useProgram(this.program);\n\n    // Setup a quad\n    this.vertexPositionAttribute = gl.getAttribLocation(\n      this.program,\n      'aVertexPosition'\n    );\n    this.textureCoordAttribute = gl.getAttribLocation(\n      this.program,\n      'aTextureCoord'\n    );\n\n    this.samplerUniform = gl.getUniformLocation(this.program, 'uSampler');\n\n    this.vertexPositionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBuffer);\n    let vertices = [\n      -1.0,\n      1.0,\n      0.0,\n      -1.0,\n      -1.0,\n      0.0,\n      1.0,\n      1.0,\n      0.0,\n      1.0,\n      -1.0,\n      0.0,\n    ];\n    let f32Vertices = new Float32Array(vertices);\n    gl.bufferData(gl.ARRAY_BUFFER, f32Vertices, gl.STATIC_DRAW);\n    this.vertexPositionBuffer.itemSize = 3;\n    this.vertexPositionBuffer.numItems = 12;\n\n    this.textureCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.textureCoordBuffer);\n    // Precalculate different texture UV coordinates depending on the possible\n    // orientations of the device depending if there is a VRDisplay or not\n    let textureCoords = null;\n    if (this.vrDisplay) {\n      let u =\n        this.passThroughCamera.width / this.passThroughCamera.textureWidth;\n      let v =\n        this.passThroughCamera.height / this.passThroughCamera.textureHeight;\n      textureCoords = [\n        [0.0, 0.0, 0.0, v, u, 0.0, u, v],\n        [u, 0.0, 0.0, 0.0, u, v, 0.0, v],\n        [u, v, u, 0.0, 0.0, v, 0.0, 0.0],\n        [0.0, v, u, v, 0.0, 0.0, u, 0.0],\n      ];\n    } else {\n      textureCoords = [\n        [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0],\n        [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0],\n        [1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0],\n        [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0],\n      ];\n    }\n\n    this.f32TextureCoords = [];\n    for (let i = 0; i < textureCoords.length; i++) {\n      this.f32TextureCoords.push(new Float32Array(textureCoords[i]));\n    }\n    // Store the current combined orientation to check if it has changed\n    // during the update calls and use the correct texture coordinates.\n    this.combinedOrientation = combineOrientations(\n      screen.orientation.angle,\n      this.passThroughCamera.orientation\n    );\n\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      this.f32TextureCoords[this.combinedOrientation],\n      gl.STATIC_DRAW\n    );\n    this.textureCoordBuffer.itemSize = 2;\n    this.textureCoordBuffer.numItems = 8;\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n    this.indexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    let indices = [0, 1, 2, 2, 1, 3];\n    let ui16Indices = new Uint16Array(indices);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, ui16Indices, gl.STATIC_DRAW);\n    this.indexBuffer.itemSize = 1;\n    this.indexBuffer.numItems = 6;\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n    this.texture = gl.createTexture();\n    gl.useProgram(null);\n\n    // The projection matrix will be based on an identify orthographic camera\n    this.projectionMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    this.mvMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    return this;\n  }\n\n  /**\n   * Renders the quad\n   */\n  render() {\n    let gl = this.gl;\n    gl.useProgram(this.program);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBuffer);\n    gl.enableVertexAttribArray(this.vertexPositionAttribute);\n    gl.vertexAttribPointer(\n      this.vertexPositionAttribute,\n      this.vertexPositionBuffer.itemSize,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.textureCoordBuffer);\n\n    // Check the current orientation of the device combined with the\n    // orientation of the VRSeeThroughCamera to determine the correct UV\n    // coordinates to be used.\n    let combinedOrientation = combineOrientations(\n      screen.orientation.angle,\n      this.passThroughCamera.orientation\n    );\n    if (combinedOrientation !== this.combinedOrientation) {\n      this.combinedOrientation = combinedOrientation;\n      gl.bufferData(\n        gl.ARRAY_BUFFER,\n        this.f32TextureCoords[this.combinedOrientation],\n        gl.STATIC_DRAW\n      );\n    }\n    gl.enableVertexAttribArray(this.textureCoordAttribute);\n    gl.vertexAttribPointer(\n      this.textureCoordAttribute,\n      this.textureCoordBuffer.itemSize,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_EXTERNAL_OES, this.texture);\n    // Update the content of the texture in every frame.\n    gl.texImage2D(\n      gl.TEXTURE_EXTERNAL_OES,\n      0,\n      gl.RGB,\n      gl.RGB,\n      gl.UNSIGNED_BYTE,\n      this.passThroughCamera\n    );\n    gl.uniform1i(this.samplerUniform, 0);\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n\n    gl.drawElements(\n      gl.TRIANGLES,\n      this.indexBuffer.numItems,\n      gl.UNSIGNED_SHORT,\n      0\n    );\n\n    // Disable enabled states to allow other render calls to correctly work\n    gl.bindTexture(gl.TEXTURE_EXTERNAL_OES, null);\n    gl.disableVertexAttribArray(this.vertexPositionAttribute);\n    gl.disableVertexAttribArray(this.textureCoordAttribute);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.useProgram(null);\n  }\n}\n\n/**\n * A helper class that takes a VRDisplay with AR capabilities\n * and renders the see through camera to the passed in WebGLRenderer's\n * context.\n */\nclass ARView {\n  /**\n   * @param {VRDisplay} vrDisplay\n   * @param {THREE.WebGLRenderer} renderer\n   */\n  constructor(vrDisplay, renderer) {\n    this.vrDisplay = vrDisplay;\n    if (isARKit(this.vrDisplay)) {\n      return;\n    }\n    this.renderer = renderer;\n    this.gl = renderer.context;\n\n    this.videoRenderer = new ARVideoRenderer(vrDisplay, this.gl);\n    this._resetGLState();\n\n    // Cache the width/height so we're not potentially forcing\n    // a reflow if there's been a style invalidation\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    window.addEventListener('resize', this.onWindowResize.bind(this), false);\n  }\n\n  /**\n   * Updates the stored width/height of window on resize.\n   */\n  onWindowResize() {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n  }\n\n  /**\n   * Renders the see through camera to the passed in renderer\n   */\n  render() {\n    if (isARKit(this.vrDisplay)) {\n      return;\n    }\n\n    let gl = this.gl;\n    let dpr = window.devicePixelRatio;\n    let width = this.width * dpr;\n    let height = this.height * dpr;\n\n    if (gl.viewportWidth !== width) {\n      gl.viewportWidth = width;\n    }\n\n    if (gl.viewportHeight !== height) {\n      gl.viewportHeight = height;\n    }\n\n    this.gl.viewport(0, 0, gl.viewportWidth, gl.viewportHeight);\n    this.videoRenderer.render();\n    this._resetGLState();\n  }\n\n  /**\n   * Resets the GL state in the THREE.WebGLRenderer.\n   */\n  _resetGLState() {\n    if (typeof this.renderer.resetGLState === 'function') {\n      // If using three.js <= r86\n      this.renderer.resetGLState();\n    } else {\n      // If using three.js >= r87\n      this.renderer.state.reset();\n    }\n  }\n}\n\n\n// THREE.ARView = ARView;\nexport { ARView };\n","/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* eslint-disable */\n(function() {\n  if (window.webarSpeechRecognitionInstance) {\n\n    function addEventHandlingToObject(object) {\n      object.listeners = { };\n      object.addEventListener = function(eventType, callback) {\n        if (!callback) {\n          return this;\n        }\n        var listeners = this.listeners[eventType];\n        if (!listeners) {\n          this.listeners[eventType] = listeners = [];\n        }\n        if (listeners.indexOf(callback) < 0) {\n          listeners.push(callback);\n        }\n        return this;\n      };\n      object.removeEventListener = function(eventType, callback) {\n        if (!callback) {\n          return this;\n        }\n        var listeners = this.listeners[eventType];\n        if (listeners) {\n          var i = listeners.indexOf(callback);\n          if (i >= 0) {\n            this.listeners[eventType] = listeners.splice(i, 1);\n          }\n        }\n        return this;\n      };\n      object.callEventListeners = function(eventType, event) {\n        if (!event) {\n          event = { target : this };\n        }\n        if (!event.target) {\n          event.target = this;\n        }\n        event.type = eventType;\n        var onEventType = 'on' + eventType;\n        if (typeof(this[onEventType]) === 'function') {\n          this[onEventType](event)\n        }\n        var listeners = this.listeners[eventType];\n        if (listeners) {\n          for (var i = 0; i < listeners.length; i++) {\n            var typeofListener = typeof(listeners[i]);\n            if (typeofListener === 'object') {\n              listeners[i].handleEvent(event);\n            }\n            else if (typeofListener === 'function') {\n              listeners[i](event);\n            }\n          }\n        }\n        return this;\n      };\n    } \n\n    addEventHandlingToObject(window.webarSpeechRecognitionInstance);\n    var originalWebKitSpeechRecognition = window.webkitSpeechRecognition;\n    window.webkitSpeechRecognition = function() {\n      return window.webarSpeechRecognitionInstance;\n    };\n  }\n})();\n","/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nexport { ARDebug } from './ARDebug';\nexport { ARPerspectiveCamera } from './ARPerspectiveCamera';\nexport { ARReticle } from './ARReticle';\nexport { ARUtils } from './ARUtils';\nexport { ARView } from './ARView';\nimport './ARSpeechRecognition';\n"],"names":["DEFAULTS","SUCCESS_COLOR","FAILURE_COLOR","cachedVRDisplayMethods","Map","throttle","fn","timer","scope","lastFired","timeout","args","current","Date","until","undefined","apply","setTimeout","ARDebug","vrDisplay","config","Object","assign","_view","ARDebugView","open","showLastHit","hitTest","addRow","ARDebugHitTestRow","showPoseStatus","getFrameData","ARDebugPoseRow","close","getElement","rows","el","document","createElement","style","backgroundColor","padding","fontFamily","color","position","right","top","width","fontSize","zIndex","_rowsEl","transitionProperty","transitionDuration","transitionDelay","transitionTimingFunction","overflow","_controls","fontWeight","paddingTop","textAlign","cursor","addEventListener","toggleControls","bind","appendChild","_isOpen","maxHeight","textContent","row","enable","disable","id","set","ARDebugRow","title","borderTop","borderBottom","_titleEl","_dataEl","left","_dataElText","createTextNode","update","Error","value","isSuccess","nodeValue","_onHitTest","_nativeHitTest","get","_didPreviouslyHit","hit","mm","modelMatrix","toFixed","x","y","hits","call","t","parseInt","performance","now","didHit","length","_hitToString","_onGetFrameData","_nativeGetFrameData","_initialPose","pose","frameData","results","isValidPose","_poseToString","_lastPoseValid","ARPerspectiveCamera","fov","aspect","near","far","isARPerpsectiveCamera","updateProjectionMatrix","capabilities","hasPassThroughCamera","warn","projMatrix","getProjectionMatrix","projectionMatrix","fromArray","VRFrameData","leftProjectionMatrix","PerspectiveCamera","noop","loadObj","objPath","materials","Promise","resolve","reject","loader","OBJLoader","setMaterials","load","loadMtl","MTLLoader","pathChunks","mtlPath","split","setTexturePath","LEARN_MORE_LINK","UNSUPPORTED_MESSAGE","ARUtils","isTango","display","displayName","toLowerCase","includes","isARKit","isARDisplay","getARDisplay","navigator","getVRDisplays","then","displays","loadBlocksModel","THREE","p","preload","model","obj","children","geometry","applyMatrix","Matrix4","makeRotationY","Math","degToRad","tempPos","Vector3","tempQuat","Quaternion","tempScale","placeObjectAtHit","object","easing","applyOrientation","decompose","copy","quaternion","lerp","slerp","displayUnsupportedMessage","element","background","border","margin","innerHTML","body","ARReticle","innerRadius","outerRadius","RingGeometry","material","MeshBasicMaterial","makeRotationX","visible","_planeDir","Mesh","getShader","gl","str","type","shader","createShader","FRAGMENT_SHADER","VERTEX_SHADER","shaderSource","compileShader","result","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getProgram","vs","fs","vertexShader","fragmentShader","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","combineOrientations","screenOrientation","seeThroughCameraOrientation","seeThroughCameraOrientationIndex","screenOrientationIndex","ret","ARVideoRenderer","passThroughCamera","getPassThroughCamera","program","vertexSource","fragmentSource","useProgram","vertexPositionAttribute","getAttribLocation","textureCoordAttribute","samplerUniform","getUniformLocation","vertexPositionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","vertices","f32Vertices","Float32Array","bufferData","STATIC_DRAW","itemSize","numItems","textureCoordBuffer","textureCoords","u","textureWidth","v","height","textureHeight","f32TextureCoords","i","push","combinedOrientation","screen","orientation","angle","indexBuffer","ELEMENT_ARRAY_BUFFER","indices","ui16Indices","Uint16Array","texture","createTexture","mvMatrix","enableVertexAttribArray","vertexAttribPointer","FLOAT","activeTexture","TEXTURE0","bindTexture","TEXTURE_EXTERNAL_OES","texImage2D","RGB","UNSIGNED_BYTE","uniform1i","drawElements","TRIANGLES","UNSIGNED_SHORT","disableVertexAttribArray","ARView","renderer","context","videoRenderer","_resetGLState","window","innerWidth","innerHeight","onWindowResize","dpr","devicePixelRatio","viewportWidth","viewportHeight","viewport","render","resetGLState","state","reset","webarSpeechRecognitionInstance","addEventHandlingToObject","listeners","eventType","callback","indexOf","removeEventListener","splice","callEventListeners","event","target","onEventType","typeofListener","handleEvent","webkitSpeechRecognition"],"mappings":"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"}
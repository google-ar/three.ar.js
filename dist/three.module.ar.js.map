{"version":3,"file":"three.module.ar.js","sources":["../src/ARDebug.js","../src/ARPerspectiveCamera.js","../src/loaders/OBJLoader.js","../src/loaders/MTLLoader.js","../src/loaders.js","../src/ARUtils.js","../src/ARReticle.js","../src/ARView.js","../src/ARSpeechRecognition.js","../src/index.js"],"sourcesContent":["/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DEFAULTS = {\n  open: true,\n  showLastHit: true,\n  showPoseStatus: true,\n};\n\nconst SUCCESS_COLOR = '#00ff00';\nconst FAILURE_COLOR = '#ff0077';\n\n// A cache to store original native VRDisplay methods\n// since WebARonARKit does not provide a VRDisplay.prototype[method],\n// and assuming the first time ARDebug proxies a method is the\n// 'native' version, this caches the correct method if we proxy a method twice\nlet cachedVRDisplayMethods = new Map();\n\n/**\n * A throttle function to limit number of DOM writes\n * in the ARDebug view.\n *\n * @param {Function} fn\n * @param {number} timer\n * @param {Object} scope\n *\n * @return {Function}\n */\nfunction throttle(fn, timer, scope) {\n  let lastFired;\n  let timeout;\n\n  return (...args) => {\n    const current = +new Date();\n    let until;\n\n    if (lastFired) {\n      until = lastFired + timer - current;\n    }\n\n    if (until == undefined || until < 0) {\n      lastFired = current;\n      fn.apply(scope, args);\n    } else if (until >= 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        lastFired = current;\n        fn.apply(scope, args);\n      }, until);\n    }\n  };\n}\n/**\n * Class for creating a mesh that fires raycasts and lerps\n * a 3D object along the surface\n */\nclass ARDebug {\n  /**\n   * @param {VRDisplay} vrDisplay\n   * @param {Object} config\n   * @param {boolean} config.open\n   * @param {boolean} config.showLastHit\n   * @param {boolean} config.showPoseStatus\n   */\n  constructor(vrDisplay, config={}) {\n    this.config = Object.assign({}, config, DEFAULTS);\n    this.vrDisplay = vrDisplay;\n\n    this._view = new ARDebugView({ open: this.config.open });\n\n    if (this.config.showLastHit && this.vrDisplay.hitTest) {\n      this._view.addRow('hit-test', new ARDebugHitTestRow(vrDisplay));\n    }\n\n    if (this.config.showPoseStatus && this.vrDisplay.getFrameData) {\n      this._view.addRow('pose-status', new ARDebugPoseRow(vrDisplay));\n    }\n  }\n\n  /**\n   * Opens the debug panel.\n   */\n  open() {\n    this._view.open();\n  }\n\n  /**\n   * Closes the debug panel.\n   */\n  close() {\n    this._view.close();\n  }\n\n  /**\n   * Returns the root DOM element for the panel.\n   *\n   * @return {HTMLElement}\n   */\n  getElement() {\n    return this._view.getElement();\n  }\n}\n\n/**\n * An implementation that interfaces with the DOM, used\n * by ARDebug\n */\nclass ARDebugView {\n  /**\n   * @param {Object} config\n   * @param {boolean} config.open\n   */\n  constructor(config={}) {\n    this.rows = new Map();\n\n    this.el = document.createElement('div');\n    this.el.style.backgroundColor = '#333';\n    this.el.style.padding = '5px';\n    this.el.style.fontFamily = 'Roboto, Ubuntu, Arial, sans-serif';\n    this.el.style.color = 'rgb(165, 165, 165)';\n    this.el.style.position = 'absolute';\n    this.el.style.right = '20px';\n    this.el.style.top = '0px';\n    this.el.style.width = '200px';\n    this.el.style.fontSize = '12px';\n    this.el.style.zIndex = 9999;\n\n    this._rowsEl = document.createElement('div');\n    this._rowsEl.style.transitionProperty = 'max-height';\n    this._rowsEl.style.transitionDuration = '0.5s';\n    this._rowsEl.style.transitionDelay = '0s';\n    this._rowsEl.style.transitionTimingFunction = 'ease-out';\n    this._rowsEl.style.overflow = 'hidden';\n\n    this._controls = document.createElement('div');\n    this._controls.style.fontSize = '13px';\n    this._controls.style.fontWeight = 'bold';\n    this._controls.style.paddingTop = '5px';\n    this._controls.style.textAlign = 'center';\n    this._controls.style.cursor = 'pointer';\n    this._controls.addEventListener('click', this.toggleControls.bind(this));\n\n    // Initialize the view as open or closed\n    config.open ? this.open() : this.close();\n\n    this.el.appendChild(this._rowsEl);\n    this.el.appendChild(this._controls);\n  }\n\n  /**\n   * Toggles between open and close modes.\n   */\n  toggleControls() {\n    if (this._isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Opens the debugging panel.\n   */\n  open() {\n    // Use max-height with large value to transition\n    // to/from a non-specific height (like auto/100%)\n    // https://stackoverflow.com/a/8331169\n    // @TODO investigate a more complete solution with correct timing,\n    // via something like http://n12v.com/css-transition-to-from-auto/\n    this._rowsEl.style.maxHeight = '100px';\n    this._isOpen = true;\n    this._controls.textContent = 'Close ARDebug';\n    for (let [, row] of this.rows) {\n      row.enable();\n    }\n  }\n\n  /**\n   * Closes the debugging panel.\n   */\n  close() {\n    this._rowsEl.style.maxHeight = '0px';\n    this._isOpen = false;\n    this._controls.textContent = 'Open ARDebug';\n    for (let [, row] of this.rows) {\n      row.disable();\n    }\n  }\n\n  /**\n   * Returns the ARDebugView root element.\n   *\n   * @return {HTMLElement}\n   */\n  getElement() {\n    return this.el;\n  }\n\n  /**\n   * Adds a row to the ARDebugView.\n   *\n   * @param {string} id\n   * @param {ARDebugRow} row\n   */\n  addRow(id, row) {\n    this.rows.set(id, row);\n\n    if (this._isOpen) {\n      row.enable();\n    }\n\n    this._rowsEl.appendChild(row.getElement());\n  }\n}\n\n/**\n * A class that implements features being a row in the ARDebugView.\n */\nclass ARDebugRow {\n  /**\n   * @param {string} title\n   */\n  constructor(title) {\n    this.el = document.createElement('div');\n    this.el.style.width = '100%';\n    this.el.style.borderTop = '1px solid rgb(54, 54, 54)';\n    this.el.style.borderBottom = '1px solid #14171A';\n    this.el.style.position = 'relative';\n    this.el.style.padding = '3px 0px';\n    this.el.style.overflow = 'hidden';\n\n    this._titleEl = document.createElement('span');\n    this._titleEl.style.fontWeight = 'bold';\n    this._titleEl.textContent = title;\n\n    this._dataEl = document.createElement('span');\n    this._dataEl.style.position = 'absolute';\n    this._dataEl.style.left = '40px';\n\n    // Create a text element to update so we can avoid\n    // forced reflows when updating\n    // https://stackoverflow.com/a/17203046\n    this._dataElText = document.createTextNode('');\n    this._dataEl.appendChild(this._dataElText);\n\n    this.el.appendChild(this._titleEl);\n    this.el.appendChild(this._dataEl);\n\n    this.update = throttle(this.update, 500, this);\n  }\n\n  /**\n   * Enables the proxying and inspection functionality of\n   * this row. Should be implemented by child class.\n   */\n  enable() {\n    throw new Error('Implement in child class');\n  }\n\n  /**\n   * Disables the proxying and inspection functionality of\n   * this row. Should be implemented by child class.\n   */\n  disable() {\n    throw new Error('Implement in child class');\n  }\n\n  /**\n   * Returns the ARDebugRow's root element.\n   *\n   * @return {HTMLElement}\n   */\n  getElement() {\n    return this.el;\n  }\n\n  /**\n   * Updates the row's value.\n   *\n   * @param {string} value\n   * @param {boolean} isSuccess\n   */\n  update(value, isSuccess) {\n    this._dataElText.nodeValue = value;\n    this._dataEl.style.color = isSuccess ? SUCCESS_COLOR : FAILURE_COLOR;\n  }\n}\n\n/**\n * The ARDebugRow subclass for displaying hit information\n * by wrapping `vrDisplay.hitTest` and displaying the results.\n */\nclass ARDebugHitTestRow extends ARDebugRow {\n  /**\n   * @param {VRDisplay} vrDisplay\n   */\n  constructor(vrDisplay) {\n    super('Hit');\n    this.vrDisplay = vrDisplay;\n    this._onHitTest = this._onHitTest.bind(this);\n\n    // Store the native hit test, or proxy the native `hitTest` call with our own\n    this._nativeHitTest = cachedVRDisplayMethods.get('hitTest') || this.vrDisplay.hitTest;\n    cachedVRDisplayMethods.set('hitTest', this._nativeHitTest);\n\n    this._didPreviouslyHit = null;\n  }\n\n  /**\n   * Enables the tracking of hit test information.\n   */\n  enable() {\n    this.vrDisplay.hitTest = this._onHitTest;\n  }\n\n  /**\n   * Disables the tracking of hit test information.\n   */\n  disable() {\n    this.vrDisplay.hitTest = this._nativeHitTest;\n  }\n\n  /**\n   * @param {VRHit} hit\n   * @return {string}\n   */\n  _hitToString(hit) {\n    const mm = hit.modelMatrix;\n    return `${mm[12].toFixed(2)}, ${mm[13].toFixed(2)}, ${mm[14].toFixed(2)}`;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @return {VRHit?}\n   */\n  _onHitTest(x, y) {\n    const hits = this._nativeHitTest.call(this.vrDisplay, x, y);\n\n    const t = (parseInt(performance.now(), 10) / 1000).toFixed(1);\n    const didHit = hits && hits.length;\n\n    this.update(`${didHit ? this._hitToString(hits[0]) : 'MISS'} @ ${t}s`, didHit);\n    this._didPreviouslyHit = didHit;\n    return hits;\n  }\n}\n\n/**\n * The ARDebugRow subclass for displaying pose information\n * by wrapping `vrDisplay.getFrameData` and displaying the results.\n */\nclass ARDebugPoseRow extends ARDebugRow {\n  /**\n   * @param {VRDisplay} vrDisplay\n   */\n  constructor(vrDisplay) {\n    super('Pose');\n    this.vrDisplay = vrDisplay;\n    this._onGetFrameData = this._onGetFrameData.bind(this);\n\n    // Store the native hit test, or proxy the native `hitTest` call with our own\n    this._nativeGetFrameData = cachedVRDisplayMethods.get('getFrameData') ||\n                               this.vrDisplay.getFrameData;\n    cachedVRDisplayMethods.set('getFrameData', this._nativeGetFrameData);\n\n    this.update('Looking for position...');\n    this._initialPose = false;\n  }\n\n  /**\n   * Enables displaying and pulling getFrameData\n   */\n  enable() {\n    this.vrDisplay.getFrameData = this._onGetFrameData;\n  }\n\n  /**\n   * Disables displaying and pulling getFrameData\n   */\n  disable() {\n    this.vrDisplay.getFrameData = this._nativeGetFrameData;\n  }\n\n  /**\n   * @param {VRPose} pose\n   * @return {string}\n   */\n  _poseToString(pose) {\n    return `${pose[0].toFixed(2)}, ${pose[1].toFixed(2)}, ${pose[2].toFixed(2)}`;\n  }\n\n  /**\n   * Wrapper around getFrameData\n   *\n   * @param {VRFrameData} frameData\n   * @return {boolean}\n   */\n  _onGetFrameData(frameData) {\n    const results = this._nativeGetFrameData.call(this.vrDisplay, frameData);\n    const pose = frameData && frameData.pose && frameData.pose.position;\n    // Ensure we have a valid pose; while the pose SHOULD be null when not\n    // provided by the VRDisplay, on WebARonARCore, the xyz values of position\n    // are all 0 -- mark this as an invalid pose\n    const isValidPose = pose &&\n                        typeof pose[0] === 'number' &&\n                        typeof pose[1] === 'number' &&\n                        typeof pose[2] === 'number' &&\n                        !(pose[0] === 0 && pose[1] === 0 && pose[2] === 0);\n\n    // If we haven't received a pose yet, and still don't have a valid pose\n    // leave the message how it is\n    if (!this._initialPose && !isValidPose) {\n      return results;\n    }\n\n    if (isValidPose) {\n      this.update(this._poseToString(pose), true);\n    } else if (!isValidPose && this._lastPoseValid !== false) {\n      this.update(`Position lost`, false);\n    }\n\n    this._lastPoseValid = isValidPose;\n    this._initialPose = true;\n\n    return results;\n  }\n}\n\n\n// THREE.ARDebug = ARDebug;\nexport { ARDebug };\n","/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PerspectiveCamera } from 'three';\n\n// Reuse the frame data for getting the projection matrix\nlet frameData;\n\n/**\n * Class extending a THREE.PerspectiveCamera, attempting\n * to use the projection matrix provided from an AR-enabled\n * VRDisplay. If no AR-enabled VRDisplay found, uses provided\n * parameters.\n */\nclass ARPerspectiveCamera extends PerspectiveCamera {\n  /**\n   * @param {VRDisplay} vrDisplay\n   * @param {number} fov\n   * @param {number} aspect\n   * @param {number} near\n   * @param {number} far\n   */\n  constructor(vrDisplay, fov, aspect, near, far) {\n    super(fov, aspect, near, far);\n    this.isARPerpsectiveCamera = true;\n    this.vrDisplay = vrDisplay;\n    this.updateProjectionMatrix();\n\n    if (!vrDisplay || !vrDisplay.capabilities.hasPassThroughCamera) {\n      console.warn(`ARPerspectiveCamera does not a VRDisplay with\n                    a pass through camera. Using supplied values and defaults\n                    instead of device camera intrinsics`);\n    }\n  }\n\n  /**\n   * Updates the underlying `projectionMatrix` property from\n   * the AR-enabled VRDisplay, or falls back to\n   * THREE.PerspectiveCamera.prototype.updateProjectionMatrix\n   */\n  updateProjectionMatrix() {\n    const projMatrix = this.getProjectionMatrix();\n    if (!projMatrix) {\n      super.updateProjectionMatrix();\n      return;\n    }\n\n    this.projectionMatrix.fromArray(projMatrix);\n  }\n\n  /**\n   * Gets the projection matrix from AR-enabled VRDisplay\n   * if possible.\n   * @return {!Float32Array}\n   */\n  getProjectionMatrix() {\n    if (this.vrDisplay && this.vrDisplay.getFrameData) {\n      if (!frameData) {\n        frameData = new VRFrameData();\n      }\n      this.vrDisplay.getFrameData(frameData);\n\n      // Can use either left or right projection matrix\n      return frameData.leftProjectionMatrix;\n    }\n    return null;\n  }\n}\n\n\n// THREE.ARPerspectiveCamera = ARPerspectiveCamera;\nexport { ARPerspectiveCamera };\n","/**\n* @author mrdoob / http://mrdoob.com/\n*/\n\nimport {\n  DefaultLoadingManager,\n  FileLoader,\n  Group,\n  BufferGeometry,\n  BufferAttribute,\n  LineBasicMaterial,\n  MeshPhongMaterial,\n  Mesh,\n  LineSegments,\n} from 'three';\n\n// o object_name | g group_name\nconst object_pattern = /^[og]\\s*(.+)?/; //eslint-disable-line\n// mtllib file_reference\nconst material_library_pattern = /^mtllib /; //eslint-disable-line\n// usemtl material_name\nconst material_use_pattern = /^usemtl /; //eslint-disable-line\n\nconst ParserState = () => {\n  let state = {\n    objects: [],\n    object: {},\n\n    vertices: [],\n    normals: [],\n    uvs: [],\n\n    materialLibraries: [],\n\n    startObject: function(name, fromDeclaration) {\n      // If the current object (initial from reset) is not from a g/o declaration in the parsed\n      // file. We need to use it for the first parsed g/o to keep things in sync.\n      if (this.object && this.object.fromDeclaration === false) {\n        this.object.name = name;\n        this.object.fromDeclaration = (fromDeclaration !== false);\n        return;\n      }\n\n      let previousMaterial = (this.object && typeof this.object.currentMaterial === 'function'\n        ? this.object.currentMaterial()\n        : undefined);\n\n      if (this.object && typeof this.object._finalize === 'function') {\n        this.object._finalize(true);\n      }\n\n      this.object = {\n        name: name || '',\n        fromDeclaration: (fromDeclaration !== false),\n\n        geometry: {\n          vertices: [],\n          normals: [],\n          uvs: [],\n        },\n        materials: [],\n        smooth: true,\n\n        startMaterial: function(name, libraries) {\n          let previous = this._finalize(false);\n\n          // New usemtl declaration overwrites an inherited material, except if faces were declared\n          // after the material, then it must be preserved for proper MultiMaterial continuation.\n          if (previous && (previous.inherited || previous.groupCount <= 0)) {\n            this.materials.splice(previous.index, 1);\n          }\n\n          let material = {\n            index: this.materials.length,\n            name: name || '',\n            mtllib: (Array.isArray(libraries) && libraries.length > 0\n              ? libraries[libraries.length - 1]\n              : ''),\n            smooth: (previous !== undefined\n              ? previous.smooth\n              : this.smooth),\n            groupStart: (previous !== undefined\n              ? previous.groupEnd\n              : 0),\n            groupEnd: -1,\n            groupCount: -1,\n            inherited: false,\n\n            clone: function(index) {\n              let cloned = {\n                index: (typeof index === 'number'\n                  ? index\n                  : this.index),\n                name: this.name,\n                mtllib: this.mtllib,\n                smooth: this.smooth,\n                groupStart: 0,\n                groupEnd: -1,\n                groupCount: -1,\n                inherited: false,\n              };\n              cloned.clone = this.clone.bind(cloned);\n              return cloned;\n            },\n          };\n\n          this.materials.push(material);\n\n          return material;\n        },\n\n        currentMaterial: function() {\n          if (this.materials.length > 0) {\n            return this.materials[this.materials.length - 1];\n          }\n\n          return undefined;\n        },\n\n        _finalize: function(end) {\n          let lastMultiMaterial = this.currentMaterial();\n          if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n            lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n            lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart; //eslint-disable-line\n            lastMultiMaterial.inherited = false;\n          }\n\n          // Ignore objects tail materials if no face\n          // declarations followed them before a new o/g started.\n          if (end && this.materials.length > 1) {\n            for (let mi = this.materials.length - 1; mi >= 0; mi--) {\n              if (this.materials[mi].groupCount <= 0) {\n                this.materials.splice(mi, 1);\n              }\n            }\n          }\n\n          // Guarantee at least one empty material,\n          // this makes the creation later more straight forward.\n          if (end && this.materials.length === 0) {\n            this.materials.push({ name: '', smooth: this.smooth });\n          }\n\n          return lastMultiMaterial;\n        },\n      };\n\n      // Inherit previous objects material.\n      // Spec tells us that a declared material must be set to all objects until\n      // a new material is declared.\n      // If a usemtl declaration is encountered while this new object is being parsed, it will\n      // overwrite the inherited material. Exception being that there was already face declarations\n      // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n      if (previousMaterial && previousMaterial.name\n          && typeof previousMaterial.clone === 'function') {\n        let declared = previousMaterial.clone(0);\n        declared.inherited = true;\n        this.object.materials.push(declared);\n      }\n\n      this.objects.push(this.object);\n    },\n\n    finalize: function() {\n      if (this.object && typeof this.object._finalize === 'function') {\n        this.object._finalize(true);\n      }\n    },\n\n    parseVertexIndex: function(value, len) {\n      let index = parseInt(value, 10);\n      return (index >= 0\n        ? index - 1\n        : index + len / 3) * 3;\n    },\n\n    parseNormalIndex: function(value, len) {\n      let index = parseInt(value, 10);\n      return (index >= 0\n        ? index - 1\n        : index + len / 3) * 3;\n    },\n\n    parseUVIndex: function(value, len) {\n      let index = parseInt(value, 10);\n      return (index >= 0\n        ? index - 1\n        : index + len / 2) * 2;\n    },\n\n    addVertex: function(a, b, c) {\n      let src = this.vertices;\n      let dst = this.object.geometry.vertices;\n\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      dst.push(src[b + 0], src[b + 1], src[b + 2]);\n      dst.push(src[c + 0], src[c + 1], src[c + 2]);\n    },\n\n    addVertexLine: function(a) {\n      let src = this.vertices;\n      let dst = this.object.geometry.vertices;\n\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n    },\n\n    addNormal: function(a, b, c) {\n      let src = this.normals;\n      let dst = this.object.geometry.normals;\n\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      dst.push(src[b + 0], src[b + 1], src[b + 2]);\n      dst.push(src[c + 0], src[c + 1], src[c + 2]);\n    },\n\n    addUV: function(a, b, c) {\n      let src = this.uvs;\n      let dst = this.object.geometry.uvs;\n\n      dst.push(src[a + 0], src[a + 1]);\n      dst.push(src[b + 0], src[b + 1]);\n      dst.push(src[c + 0], src[c + 1]);\n    },\n\n    addUVLine: function(a) {\n      let src = this.uvs;\n      let dst = this.object.geometry.uvs;\n\n      dst.push(src[a + 0], src[a + 1]);\n    },\n\n    addFace: function(a, b, c, ua, ub, uc, na, nb, nc) {\n      let vLen = this.vertices.length;\n\n      let ia = this.parseVertexIndex(a, vLen);\n      let ib = this.parseVertexIndex(b, vLen);\n      let ic = this.parseVertexIndex(c, vLen);\n\n      this.addVertex(ia, ib, ic);\n\n      if (ua !== undefined) {\n        let uvLen = this.uvs.length;\n\n        ia = this.parseUVIndex(ua, uvLen);\n        ib = this.parseUVIndex(ub, uvLen);\n        ic = this.parseUVIndex(uc, uvLen);\n\n        this.addUV(ia, ib, ic);\n      }\n\n      if (na !== undefined) {\n        // Normals are many times the same. If so, skip function call and parseInt.\n        let nLen = this.normals.length;\n        ia = this.parseNormalIndex(na, nLen);\n\n        ib = na === nb\n          ? ia\n          : this.parseNormalIndex(nb, nLen);\n        ic = na === nc\n          ? ia\n          : this.parseNormalIndex(nc, nLen);\n\n        this.addNormal(ia, ib, ic);\n      }\n    },\n\n    addLineGeometry: function(vertices, uvs) {\n      this.object.geometry.type = 'Line';\n\n      let vLen = this.vertices.length;\n      let uvLen = this.uvs.length;\n\n      for (let vi = 0, l = vertices.length; vi < l; vi++) {\n        this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n      }\n\n      for (let uvi = 0, l = uvs.length; uvi < l; uvi++) {\n        this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n      }\n    },\n  };\n\n  state.startObject('', false);\n\n  return state;\n};\n\n/**\n* OBJLoader class\n* @type {Loader}\n*/\nexport default class OBJLoader {\n  /**\n* @param  {THREE.DefaultLoadingManager} manager\n*/\n  constructor(manager) {\n    this.manager = (manager !== undefined)\n      ? manager\n      : DefaultLoadingManager;\n\n    this.materials = null;\n  }\n\n  /**\n* @param  {String} url\n* @param  {Function} onLoad\n* @param  {Function} onProgress\n* @param  {Function} onError\n*/\n  load(url, onLoad, onProgress, onError) {\n    let scope = this;\n\n    let loader = new FileLoader(scope.manager);\n    loader.setPath(this.path);\n    loader.load(url, function(text) {\n      onLoad(scope.parse(text));\n    }, onProgress, onError);\n  }\n\n  /**\n* @param {String} value\n*/\n  setPath(value) {\n    this.path = value;\n  }\n\n  /**\n* @param {Object} materials\n* @return {OBJLoader} this\n*/\n  setMaterials(materials) {\n    this.materials = materials;\n\n    return this;\n  }\n\n  /**\n* @param  {String} text\n* @return {String}\n*/\n  parse(text) {\n    console.time('OBJLoader'); //eslint-disable-line\n\n    let state = new ParserState();\n\n    if (text.indexOf('\\r\\n') !== - 1) {\n      // This is faster than String.split with regex that splits on both\n      text = text.replace(/\\r\\n/g, '\\n');\n    }\n\n    if (text.indexOf('\\\\\\n') !== - 1) {\n      // join lines separated by a line continuation character (\\)\n      text = text.replace(/\\\\\\n/g, '');\n    }\n\n    let lines = text.split('\\n');\n    let line = '';\n    let lineFirstChar = '';\n    let lineLength = 0;\n    let result = [];\n\n    // Faster to just trim left side of the line. Use if available.\n    let trimLeft = (typeof ''.trimLeft === 'function');\n\n    for (let i = 0, l = lines.length; i < l; i++) {\n      line = lines[i];\n\n      line = trimLeft\n        ? line.trimLeft()\n        : line.trim();\n\n      lineLength = line.length;\n\n      if (lineLength === 0) {\n        continue;\n      }\n\n      lineFirstChar = line.charAt(0);\n\n      // @todo invoke passed in handler if any\n      if (lineFirstChar === '#') {\n        continue;\n      }\n\n      if (lineFirstChar === 'v') {\n        let data = line.split(/\\s+/);\n\n        switch (data[0]) {\n          case 'v':\n            state.vertices.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n            break;\n          case 'vn':\n            state.normals.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n            break;\n          case 'vt':\n            state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\n            break;\n        }\n      } else if (lineFirstChar === 'f') {\n        let lineData = line.substr(1).trim();\n        let vertexData = lineData.split(/\\s+/);\n        let faceVertices = [];\n\n        // Parse the face vertex data into an easy to work with format\n\n        for (let j = 0, jl = vertexData.length; j < jl; j++) {\n          let vertex = vertexData[j];\n\n          if (vertex.length > 0) {\n            let vertexParts = vertex.split('/');\n            faceVertices.push(vertexParts);\n          }\n        }\n\n        // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n        let v1 = faceVertices[0];\n\n        for (let j = 1, jl = faceVertices.length - 1; j < jl; j++) {\n          let v2 = faceVertices[j];\n          let v3 = faceVertices[j + 1];\n\n          state.addFace(v1[0], v2[0], v3[0], v1[1], v2[1], v3[1], v1[2], v2[2], v3[2]);\n        }\n      } else if (lineFirstChar === 'l') {\n        let lineParts = line.substring(1).trim().split(' ');\n        let lineVertices = [];\n        let lineUVs = [];\n\n        if (line.indexOf('/') === - 1) {\n          lineVertices = lineParts;\n        } else {\n          for (let li = 0, llen = lineParts.length; li < llen; li++) {\n            let parts = lineParts[li].split('/');\n\n            if (parts[0] !== '') {\n              lineVertices.push(parts[0]);\n            }\n            if (parts[1] !== '') {\n              lineUVs.push(parts[1]);\n            }\n          }\n        }\n        state.addLineGeometry(lineVertices, lineUVs);\n      } else if ((result = object_pattern.exec(line)) !== null) {\n        // o object_name\n        // or\n        // g group_name\n\n        // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n        // var name = result[ 0 ].substr( 1 ).trim();\n        let name = (' ' + result[0].substr(1).trim()).substr(1);\n\n        state.startObject(name);\n      } else if (material_use_pattern.test(line)) {\n        // material\n\n        state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\n      } else if (material_library_pattern.test(line)) {\n        // mtl file\n\n        state.materialLibraries.push(line.substring(7).trim());\n      } else if (lineFirstChar === 's') {\n        result = line.split(' ');\n\n        // smooth shading\n\n        // @todo Handle files that have varying smooth values for a set of faces\n        // inside one geometry, but does not define a usemtl for each face set.\n        // This should be detected and a dummy material created\n        // (later MultiMaterial and geometry groups).\n        // This requires some care to not create extra material on each smooth\n        //  value for \"normal\" obj files.\n        // where explicit usemtl defines geometry groups.\n        // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n        /*\n* http://paulbourke.net/dataformats/obj/\n* or\n* http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n*\n* From chapter \"Grouping\" Syntax explanation \"s group_number\":\n* \"group_number is the smoothing group number. To turn off smoothing\n*  groups, use a value of 0 or off.\n* Polygonal elements use group numbers to put elements in different\n*  smoothing groups. For free-form\n* surfaces, smoothing groups are either turned on or off; there is no\n*  difference between values greater\n* than 0.\"\n*/\n        if (result.length > 1) {\n          let value = result[1].trim().toLowerCase();\n          state.object.smooth = (value !== '0' && value !== 'off');\n        } else {\n          // ZBrush can produce \"s\" lines #11707\n          state.object.smooth = true;\n        }\n        let material = state.object.currentMaterial();\n        if (material) {\n          material.smooth = state.object.smooth;\n        } else {\n          // Handle null terminated files without exception\n          if (line === '\\0') {\n            continue;\n          }\n\n          throw new Error('Unexpected line: \\'' + line + '\\'');\n        }\n      }\n\n      state.finalize();\n\n      let container = new Group();\n      container.materialLibraries = [].concat(state.materialLibraries);\n\n      for (let i = 0, l = state.objects.length; i < l; i++) {\n        let object = state.objects[i];\n        let geometry = object.geometry;\n        let materials = object.materials;\n        let isLine = (geometry.type === 'Line');\n\n        // Skip o/g line declarations that did not follow with any faces\n        if (geometry.vertices.length === 0) {\n          continue;\n        }\n\n        let buffergeometry = new BufferGeometry();\n\n        buffergeometry.addAttribute('position',\n          new BufferAttribute(new Float32Array(geometry.vertices), 3));\n\n        if (geometry.normals.length > 0) {\n          buffergeometry.addAttribute('normal',\n            new BufferAttribute(new Float32Array(geometry.normals), 3));\n        } else {\n          buffergeometry.computeVertexNormals();\n        }\n\n        if (geometry.uvs.length > 0) {\n          buffergeometry.addAttribute('uv', new BufferAttribute(new Float32Array(geometry.uvs), 2));\n        }\n\n        // Create materials\n\n        let createdMaterials = [];\n\n        for (let mi = 0, miLen = materials.length; mi < miLen; mi++) {\n          let sourceMaterial = materials[mi];\n          let material = undefined;\n\n          if (this.materials !== null) {\n            material = this.materials.create(sourceMaterial.name);\n\n            // mtl etc. loaders probably can't create line materials correctly, \n            // copy properties to a line material.\n            if (isLine && material && !(material instanceof LineBasicMaterial)) {\n              let materialLine = new LineBasicMaterial();\n              materialLine.copy(material);\n              material = materialLine;\n            }\n          }\n\n          if (!material) {\n            material = (!isLine\n              ? new MeshPhongMaterial()\n              : new LineBasicMaterial());\n            material.name = sourceMaterial.name;\n          }\n\n          material.flatShading = sourceMaterial.smooth\n            ? false\n            : true;\n\n          createdMaterials.push(material);\n        }\n\n        // Create mesh\n\n        let mesh;\n\n        if (createdMaterials.length > 1) {\n          for (let mi = 0, miLen = materials.length; mi < miLen; mi++) {\n            let sourceMaterial = materials[mi];\n            buffergeometry.addGroup(sourceMaterial.groupStart, sourceMaterial.groupCount, mi);\n          }\n\n          mesh = (!isLine\n            ? new Mesh(buffergeometry, createdMaterials)\n            : new LineSegments(buffergeometry, createdMaterials));\n        } else {\n          mesh = (!isLine\n            ? new Mesh(buffergeometry, createdMaterials[0])\n            : new LineSegments(buffergeometry, createdMaterials[0]));\n        }\n\n        mesh.name = object.name;\n\n        container.add(mesh);\n      }\n\n      console.timeEnd('OBJLoader'); //eslint-disable-line\n\n      return container;\n    }\n  }\n}\n","import {\n  DefaultLoadingManager,\n  FileLoader,\n  FrontSide,\n  RepeatWrapping,\n  Color,\n  MeshPhongMaterial,\n  Vector2,\n  Loader,\n  TextureLoader,\n} from 'three';\n\n/**\n* Loads a Wavefront .mtl file specifying materials\n*\n* @author angelxuanchang\n*/\nexport default class MTLLoader {\n  /**\n* @param {THREE.DefaultLoadingManager} manager - the loading manager\n*/\n  constructor(manager) {\n    this.manager = (manager !== undefined)\n      ? manager\n      : DefaultLoadingManager;\n  }\n\n  /**\n* Loads and parses a MTL asset from a URL.\n*\n* @param {String} url - URL to the MTL file.\n* @param {Function} [onLoad] - Callback invoked with the loaded object.\n* @param {Function} [onProgress] - Callback for download progress.\n* @param {Function} [onError] - Callback for download errors.\n*\n* @see setPath setTexturePath\n*\n* @note In order for relative texture references to resolve correctly\n* you must call setPath and/or setTexturePath explicitly prior to load.\n*/\n  load(url, onLoad, onProgress, onError) {\n    let scope = this;\n\n    let loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.load(url, function(text) {\n      onLoad(scope.parse(text));\n    }, onProgress, onError);\n  }\n\n  /**\n* Set base path for resolving references.\n* If set this path will be prepended to each loaded and found reference.\n*\n* @see setTexturePath\n* @param {String} path\n*\n* @example\n*     mtlLoader.setPath( 'assets/obj/' );\n*     mtlLoader.load( 'my.mtl', ... );\n*/\n  setPath(path) {\n    this.path = path;\n  }\n\n  /**\n* Set base path for resolving texture references.\n* If set this path will be prepended found texture reference.\n* If not set and setPath is, it will be used as texture base path.\n*\n* @see setPath\n* @param {String} path\n*\n* @example\n*     mtlLoader.setPath( 'assets/obj/' );\n*     mtlLoader.setTexturePath( 'assets/textures/' );\n*     mtlLoader.load( 'my.mtl', ... );\n*/\n  setTexturePath(path) {\n    this.texturePath = path;\n  }\n\n  /**\n   * @param {String} path [description]\n   */\n  setBaseUrl(path) {\n    console.warn('MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead.'); //eslint-disable-line\n    this.setTexturePath(path);\n  }\n\n  /**\n   * @param {String} value Set crossOrigin value\n   */\n  setCrossOrigin(value) {\n    this.crossOrigin = value;\n  }\n\n  /**\n   * @param {Object} value set material options\n   */\n  setMaterialOptions(value) {\n    this.materialOptions = value;\n  }\n\n  /**\n* Parses a MTL file.\n*\n* @param {String} text - Content of MTL file\n* @return {MTLLoader.MaterialCreator}\n*\n* @see setPath setTexturePath\n*\n* @note In order for relative texture references to resolve correctly\n* you must call setPath and/or setTexturePath explicitly prior to parse.\n*/\n  parse(text) {\n    let lines = text.split('\\n');\n    let info = {};\n    let delimiter_pattern = /\\s+/; //eslint-disable-line\n    let materialsInfo = {};\n\n    for (let i = 0; i < lines.length; i++) {\n      let line = lines[i];\n      line = line.trim();\n\n      if (line.length === 0 || line.charAt(0) === '#') {\n        // Blank line or comment ignore\n        continue;\n      }\n\n      let pos = line.indexOf(' ');\n\n      let key = (pos >= 0)\n        ? line.substring(0, pos)\n        : line;\n      key = key.toLowerCase();\n\n      let value = (pos >= 0)\n        ? line.substring(pos + 1)\n        : '';\n      value = value.trim();\n\n      if (key === 'newmtl') {\n        // New material\n\n        info = {\n          name: value,\n        };\n        materialsInfo[value] = info;\n      } else if (info) {\n        if (key === 'ka' || key === 'kd' || key === 'ks') {\n          let ss = value.split(delimiter_pattern, 3);\n          info[key] = [\n            parseFloat(ss[0]),\n            parseFloat(ss[1]),\n            parseFloat(ss[2]),\n          ];\n        } else {\n          info[key] = value;\n        }\n      }\n    }\n\n    let materialCreator = new MaterialCreator(this.texturePath || this.path, this.materialOptions);\n    materialCreator.setCrossOrigin(this.crossOrigin);\n    materialCreator.setManager(this.manager);\n    materialCreator.setMaterials(materialsInfo);\n    return materialCreator;\n  }\n}\n\n/**\n * Create a new THREE-MTLLoader.MaterialCreator\n * @type {Material}\n */\nclass MaterialCreator {\n  /**\n  * @param {String} baseUrl - Url relative to which textures are loaded\n  * @param {Object} options - Set of options on how to construct the materials\n  *                  side: Which side to apply the material\n  *                        FrontSide (default), BackSide, DoubleSide\n  *                  wrap: What type of wrapping to apply for textures\n  *                        RepeatWrapping (default), ClampToEdgeWrapping, MirroredRepeatWrapping\n  *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\n  *                                Default: false, assumed to be already normalized\n  *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\n  *                                  Default: false\n  * @constructor\n  */\n  constructor(baseUrl, options) {\n    this.baseUrl = baseUrl || '';\n    this.options = options;\n    this.materialsInfo = {};\n    this.materials = {};\n    this.materialsArray = [];\n    this.nameLookup = {};\n    this.crossOrigin = 'Anonymous';\n\n    this.side = (this.options && this.options.side)\n      ? this.options.side\n      : FrontSide;\n    this.wrap = (this.options && this.options.wrap)\n      ? this.options.wrap\n      : RepeatWrapping;\n  }\n\n  /**\n   * set cross origin\n   * @param {String} value cross origin value\n   */\n  setCrossOrigin(value) {\n    this.crossOrigin = value;\n  }\n\n  /**\n   * setManager\n   * @param {THREE.DefaultLoadingManager} value Loading manager\n   */\n  setManager(value) {\n    this.manager = value;\n  }\n\n  /**\n   * [setMaterials description]\n   * @param {Object} materialsInfo [description]\n   */\n  setMaterials(materialsInfo) {\n    this.materialsInfo = this.convert(materialsInfo);\n    this.materials = {};\n    this.materialsArray = [];\n    this.nameLookup = {};\n  }\n\n  /**\n   * [convert description]\n   * @param  {[type]} materialsInfo [description]\n   * @return {[type]}               [description]\n   */\n  convert(materialsInfo) {\n    if (!this.options) {\n      return materialsInfo;\n    }\n\n    let converted = {};\n\n    for (let mn in materialsInfo) {\n      if (materialsInfo[mn]) {\n      // Convert materials info into normalized form based on options\n\n        let mat = materialsInfo[mn];\n\n        let covmat = {};\n\n        converted[mn] = covmat;\n\n        for (let prop in mat) {\n          if (mat[prop]) {\n            let save = true;\n            let value = mat[prop];\n            let lprop = prop.toLowerCase();\n\n            switch (lprop) {\n              case 'kd':\n              case 'ka':\n              case 'ks':\n\n                // Diffuse color (color under white light) using RGB values\n\n                if (this.options && this.options.normalizeRGB) {\n                  value = [\n                    value[0] / 255,\n                    value[1] / 255,\n                    value[2] / 255,\n                  ];\n                }\n\n                if (this.options && this.options.ignoreZeroRGBs) {\n                  if (value[0] === 0 && value[1] === 0 && value[2] === 0) {\n                    // ignore\n\n                    save = false;\n                  }\n                }\n\n                break;\n\n              default:\n\n                break;\n            }\n\n            if (save) {\n              covmat[lprop] = value;\n            }\n          }\n        }\n      }\n    }\n\n    return converted;\n  }\n\n  /**\n   * preload\n   */\n  preload() {\n    for (let mn in this.materialsInfo) {\n      if (this.materialsInfo[mn]) {\n        this.create(mn);\n      }\n    }\n  }\n\n  /**\n   * get index\n   * @param  {String} materialName material name\n   * @return {Material}            return material\n   */\n  getIndex(materialName) {\n    return this.nameLookup[materialName];\n  }\n\n  /**\n   * getAsArray\n   * @return {Array} array\n   */\n  getAsArray() {\n    let index = 0;\n\n    for (let mn in this.materialsInfo) {\n      if (this.materialsInfo[mn]) {\n        this.materialsArray[index] = this.create(mn);\n        this.nameLookup[mn] = index;\n        index++;\n      }\n    }\n\n    return this.materialsArray;\n  }\n\n  /**\n   * create material\n   * @param  {String} materialName material name\n   * @return {Material}            returned material\n   */\n  create(materialName) {\n    if (this.materials[materialName] === undefined) {\n      this.createMaterial_(materialName);\n    }\n\n    return this.materials[materialName];\n  }\n\n  /**\n   * create material internal\n   * @param  {String} materialName material name\n   * @return {[type]}              [description]\n   */\n  createMaterial_(materialName) {\n    // Create material\n\n    let scope = this;\n    let mat = this.materialsInfo[materialName];\n    let params = {\n\n      name: materialName,\n      side: this.side,\n    };\n\n    const resolveURL =(baseUrl, url) => {\n      if (typeof url !== 'string' || url === '') {\n        return '';\n      }\n\n      // Absolute URL\n      if (/^https?:\\/\\//i.test(url)) {\n        return url;\n      }\n\n      return baseUrl + url;\n    };\n\n    const setMapForType = (mapType, value) => {\n      if (params[mapType]) {\n        return;\n      } // Keep the first encountered texture\n\n      let texParams = scope.getTextureParams(value, params);\n      let map = scope.loadTexture(resolveURL(scope.baseUrl, texParams.url));\n\n      map.repeat.copy(texParams.scale);\n      map.offset.copy(texParams.offset);\n\n      map.wrapS = scope.wrap;\n      map.wrapT = scope.wrap;\n\n      params[mapType] = map;\n    };\n\n    for (let prop in mat) {\n      if (mat[prop]) {\n        let value = mat[prop];\n        let n;\n\n        if (value === '') {\n          continue;\n        }\n\n        switch (prop.toLowerCase()) {\n            // Ns is material specular exponent\n\n          case 'kd':\n\n            // Diffuse color (color under white light) using RGB values\n\n            params.color = new Color().fromArray(value);\n\n            break;\n\n          case 'ks':\n\n            // Specular color (color when light is reflected from shiny surface) using RGB values\n            params.specular = new Color().fromArray(value);\n\n            break;\n\n          case 'map_kd':\n\n            // Diffuse texture map\n\n            setMapForType('map', value);\n\n            break;\n\n          case 'map_ks':\n\n            // Specular map\n\n            setMapForType('specularMap', value);\n\n            break;\n\n          case 'norm':\n\n            setMapForType('normalMap', value);\n\n            break;\n\n          case 'map_bump':\n          case 'bump':\n\n            // Bump texture map\n\n            setMapForType('bumpMap', value);\n\n            break;\n\n          case 'ns':\n\n            // The specular exponent (defines the focus of the specular highlight)\n            // A high exponent results in a tight, concentrated highlight. \n            // Ns values normally range from 0 to 1000.\n\n            params.shininess = parseFloat(value);\n\n            break;\n\n          case 'd':\n            n = parseFloat(value);\n\n            if (n < 1) {\n              params.opacity = n;\n              params.transparent = true;\n            }\n\n            break;\n\n          case 'tr':\n            n = parseFloat(value);\n\n            if (n > 0) {\n              params.opacity = 1 - n;\n              params.transparent = true;\n            }\n\n            break;\n\n          default:\n            break;\n        }\n    }\n    }\n\n    this.materials[materialName] = new MeshPhongMaterial(params);\n    return this.materials[materialName];\n  }\n\n  /**\n   * getTextureParams\n   * @param  {String} value     \n   * @param  {[type]} matParams \n   * @return {[type]}           \n   */\n  getTextureParams(value, matParams) {\n    let texParams = {\n\n      scale: new Vector2(1, 1),\n      offset: new Vector2(0, 0),\n    };\n\n    let items = value.split(/\\s+/);\n    let pos;\n\n    pos = items.indexOf('-bm');\n\n    if (pos >= 0) {\n      matParams.bumpScale = parseFloat(items[pos + 1]);\n      items.splice(pos, 2);\n    }\n\n    pos = items.indexOf('-s');\n\n    if (pos >= 0) {\n      texParams.scale.set(parseFloat(items[pos + 1]), parseFloat(items[pos + 2]));\n      items.splice(pos, 4); // we expect 3 parameters here!\n    }\n\n    pos = items.indexOf('-o');\n\n    if (pos >= 0) {\n      texParams.offset.set(parseFloat(items[pos + 1]), parseFloat(items[pos + 2]));\n      items.splice(pos, 4); // we expect 3 parameters here!\n    }\n\n    texParams.url = items.join(' ').trim();\n    return texParams;\n  }\n\n  /**\n   * [loadTexture description]\n   * @param  {[type]} url        [description]\n   * @param  {[type]} mapping    [description]\n   * @param  {[type]} onLoad     [description]\n   * @param  {[type]} onProgress [description]\n   * @param  {[type]} onError    [description]\n   * @return {[type]}            [description]\n   */\n  loadTexture(url, mapping, onLoad, onProgress, onError) {\n    let texture;\n    let loader = Loader.Handlers.get(url);\n    let manager = (this.manager !== undefined)\n      ? this.manager\n      : DefaultLoadingManager;\n\n    if (loader === null) {\n      loader = new TextureLoader(manager);\n    }\n\n    if (loader.setCrossOrigin) {\nloader.setCrossOrigin(this.crossOrigin);\n}\n    texture = loader.load(url, onLoad, onProgress, onError);\n\n    if (mapping !== undefined) {\ntexture.mapping = mapping;\n}\n\n    return texture;\n  }\n}\n","/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport OBJLoader from './loaders/OBJLoader';\nimport MTLLoader from './loaders/MTLLoader';\n\n/**\n * This module contains promisified loaders for internal use for\n * exposed ARUtils.\n */\n\nconst noop = function() {};\n\nexport const loadObj = (objPath, materials) => new Promise((resolve, reject) => {\n  const loader = new OBJLoader();\n\n  if (materials) {\n    loader.setMaterials(materials);\n  }\n\n  loader.load(objPath, resolve, noop, reject);\n});\n\nexport const loadMtl = mtlPath => new Promise((resolve, reject) => {\n  const loader = new MTLLoader();\n  const pathChunks = mtlPath.split('/');\n\n  if (pathChunks.length >= 2) {\n    loader.setTexturePath(pathChunks[pathChunks.length - 2]);\n  }\n\n  loader.load(mtlPath, resolve, noop, reject);\n});\n","/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Matrix4,\n  Vector3,\n  Quaternion,\n  Math,\n} from 'three';\nimport { loadMtl, loadObj } from './loaders';\n\nconst LEARN_MORE_LINK = 'https://developers.google.com/ar/develop/web/getting-started';\nconst UNSUPPORTED_MESSAGE = `This augmented reality experience requires\n  WebARonARCore or WebARonARKit, experimental browsers from Google\n  for Android and iOS. Learn more at the <a href=\"${LEARN_MORE_LINK}\">Google Developers site</a>.`;\n\nconst ARUtils = {};\n\nARUtils.isTango = display =>\n  display && display.displayName.toLowerCase().includes('tango');\nexport const isTango = ARUtils.isTango;\n\nARUtils.isARKit = display =>\n  display && display.displayName.toLowerCase().includes('arkit');\nexport const isARKit = ARUtils.isARKit;\n\nARUtils.isARDisplay = display => isARKit(display) || isTango(display);\nexport const isARDisplay = ARUtils.isARDisplay;\n\n/**\n * Returns a promise that resolves to either to a VRDisplay with\n * AR capabilities, or null if no valid AR devices found on the platform.\n *\n * @return {Promise<VRDisplay?>}\n */\nARUtils.getARDisplay = () => new Promise((resolve, reject) => {\n  if (!navigator.getVRDisplays) {\n    resolve(null);\n    return;\n  }\n\n  navigator.getVRDisplays().then(displays => {\n    if (!displays && displays.length === 0) {\n      resolve(null);\n      return;\n    }\n\n    for (let display of displays) {\n      if (isARDisplay(display)) {\n        resolve(display);\n        return;\n      }\n    }\n    resolve(null);\n  });\n});\nexport const getARDisplay = ARUtils.getARDisplay;\n\n/**\n * Takes a path for an OBJ model and optionally a path for an MTL\n * texture and returns a promise resolving to a THREE.Mesh loaded with\n * the appropriate material. Can be used on downloaded models from Blocks.\n *\n * @param {string} objPath\n * @param {string} mtlPath\n * @return {THREE.Mesh}\n */\nARUtils.loadBlocksModel = (objPath, mtlPath) => new Promise((resolve, reject) => {\n  if (!THREE.OBJLoader || !THREE.MTLLoader) {\n    reject(new Error('Must include THREE.OBJLoader and THREE.MTLLoader'));\n    return;\n  }\n\n  let p = Promise.resolve();\n\n  if (mtlPath) {\n    p = loadMtl(mtlPath);\n  }\n\n  p.then(materials => {\n    if (materials) {\n      materials.preload();\n    }\n    return loadObj(objPath, materials);\n  }).then(obj => {\n    const model = obj.children[0];\n    model.geometry.applyMatrix(\n      new Matrix4().makeRotationY(Math.degToRad(-90))\n    );\n\n    return model;\n  }).then(resolve, reject);\n});\nexport const loadBlocksModel = ARUtils.loadBlocksModel;\n\nconst model = new Matrix4();\nconst tempPos = new Vector3();\nconst tempQuat = new Quaternion();\nconst tempScale = new Vector3();\n\n/**\n * Takes a THREE.Object3D and a VRHit and positions and optionally orients\n * the object according to the transform of the VRHit. Can provide an\n * easing value between 0 and 1 corresponding to the lerp between the\n * object's current position/orientation, and the position/orientation of the\n * hit.\n *\n * @param {THREE.Object3D} object\n * @param {VRHit} hit\n * @param {number} easing\n * @param {boolean} applyOrientation\n */\nARUtils.placeObjectAtHit = (object, hit, easing=1, applyOrientation=false) => {\n  if (!hit || !hit.modelMatrix) {\n    throw new Error('placeObjectAtHit requires a VRHit object');\n  }\n\n  model.fromArray(hit.modelMatrix);\n\n  model.decompose(tempPos, tempQuat, tempScale);\n\n  if (easing === 1) {\n    object.position.copy(tempPos);\n    if (applyOrientation) {\n      object.quaternion.copy(tempQuat);\n    }\n  } else {\n    object.position.lerp(tempPos, easing);\n    if (applyOrientation) {\n      object.quaternion.slerp(tempQuat, easing);\n    }\n  }\n};\nexport const placeObjectAtHit = ARUtils.placeObjectAtHit;\n\n/**\n * Injects a DOM element into the current page prompting the user that\n * their browser does not support these AR features.\n */\nARUtils.displayUnsupportedMessage = () => {\n  const element = document.createElement('div');\n  element.id = 'webgl-error-message';\n  element.style.fontFamily = 'monospace';\n  element.style.fontSize = '13px';\n  element.style.fontWeight = 'normal';\n  element.style.textAlign = 'center';\n  element.style.background = '#fff';\n  element.style.border = '1px solid black';\n  element.style.color = '#000';\n  element.style.padding = '1.5em';\n  element.style.width = '400px';\n  element.style.margin = '5em auto 0';\n  element.innerHTML = UNSUPPORTED_MESSAGE;\n  document.body.appendChild(element);\n};\nexport const displayUnsupportedMessage = ARUtils.displayUnsupportedMessage;\n\n\nexport { ARUtils };\n","/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Mesh,\n  Vector3,\n  RingGeometry,\n  MeshBasicMaterial,\n  Matrix4,\n  Math,\n} from 'three';\nimport { placeObjectAtHit } from './ARUtils';\n\n/**\n * Class for creating a mesh that fires raycasts and lerps\n * a 3D object along the surface\n */\nclass ARReticle extends Mesh {\n  /**\n   * @param {VRDisplay} vrDisplay\n   * @param {number} innerRadius\n   * @param {number} outerRadius\n   * @param {number} color\n   * @param {number} easing\n   */\n  constructor(\n    vrDisplay,\n    innerRadius = 0.02,\n    outerRadius = 0.05,\n    color = 0xff0077,\n    easing = 0.25\n  ) {\n    const geometry = new RingGeometry(innerRadius, outerRadius, 36, 64);\n    const material = new MeshBasicMaterial({ color });\n\n    // Orient the geometry so it's position is flat on a horizontal surface\n    geometry.applyMatrix(new Matrix4().makeRotationX(Math.degToRad(-90)));\n\n    super(geometry, material);\n    this.visible = false;\n\n    this.easing = easing;\n    this.applyOrientation = true;\n    this.vrDisplay = vrDisplay;\n    this._planeDir = new Vector3();\n  }\n\n  /**\n   * Attempt to fire a raycast from normalized screen coordinates\n   * x and y and lerp the reticle to the position.\n   *\n   * @param {number} x\n   * @param {number} y\n   */\n  update(x = 0.5, y = 0.5) {\n    if (!this.vrDisplay || !this.vrDisplay.hitTest) {\n      return;\n    }\n\n    const hit = this.vrDisplay.hitTest(x, y);\n    if (hit && hit.length > 0) {\n      this.visible = true;\n      placeObjectAtHit(this, hit[0], this.applyOrientation, this.easing);\n    }\n  }\n}\n\n\n// THREE.ARReticle = ARReticle;\nexport { ARReticle };\n","/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isARKit } from './ARUtils';\nimport vertexSource from './shaders/arview.vert';\nimport fragmentSource from './shaders/arview.frag';\n\n/**\n * Creates and load a shader from a string, type specifies either 'vertex' or 'fragment'\n *\n * @param {WebGLRenderingContext} gl\n * @param {string} str\n * @param {string} type\n * @return {!WebGLShader}\n */\nfunction getShader(gl, str, type) {\n  let shader;\n  if (type == 'fragment') {\n    shader = gl.createShader(gl.FRAGMENT_SHADER);\n  } else if (type == 'vertex') {\n    shader = gl.createShader(gl.VERTEX_SHADER);\n  } else {\n    return null;\n  }\n\n  gl.shaderSource(shader, str);\n  gl.compileShader(shader);\n\n  const result = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (!result) {\n    alert(gl.getShaderInfoLog(shader));\n    return null;\n  }\n\n  return shader;\n}\n\n/**\n * Creates a shader program from vertex and fragment shader sources\n *\n * @param {WebGLRenderingContext} gl\n * @param {string} vs\n * @param {string} fs\n * @return {!WebGLProgram}\n */\nfunction getProgram(gl, vs, fs) {\n  const vertexShader = getShader(gl, vs, 'vertex');\n  const fragmentShader = getShader(gl, fs, 'fragment');\n  if (!fragmentShader) {\n    return null;\n  }\n\n  const shaderProgram = gl.createProgram();\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n\n  const result = gl.getProgramParameter(shaderProgram, gl.LINK_STATUS);\n  if (!result) {\n    alert('Could not initialise arview shaders');\n  }\n\n  return shaderProgram;\n}\n\n/**\n * Calculate the correct orientation depending on the device and the camera\n * orientations.\n *\n * @param {number} screenOrientation\n * @param {number} seeThroughCameraOrientation\n * @return {number}\n */\nfunction combineOrientations(screenOrientation, seeThroughCameraOrientation) {\n  let seeThroughCameraOrientationIndex = 0;\n  switch (seeThroughCameraOrientation) {\n    case 90:\n      seeThroughCameraOrientationIndex = 1;\n      break;\n    case 180:\n      seeThroughCameraOrientationIndex = 2;\n      break;\n    case 270:\n      seeThroughCameraOrientationIndex = 3;\n      break;\n    default:\n      seeThroughCameraOrientationIndex = 0;\n      break;\n  }\n  let screenOrientationIndex = 0;\n  switch (screenOrientation) {\n    case 90:\n      screenOrientationIndex = 1;\n      break;\n    case 180:\n      screenOrientationIndex = 2;\n      break;\n    case 270:\n      screenOrientationIndex = 3;\n      break;\n    default:\n      screenOrientationIndex = 0;\n      break;\n  }\n  let ret = screenOrientationIndex - seeThroughCameraOrientationIndex;\n  if (ret < 0) {\n    ret += 4;\n  }\n  return ret % 4;\n}\n\n/**\n * Renders the ar camera's video texture\n */\nclass ARVideoRenderer {\n  /**\n   * @param {VRDisplay} vrDisplay\n   * @param {WebGLRenderingContext} gl\n   */\n  constructor(vrDisplay, gl) {\n    this.vrDisplay = vrDisplay;\n    this.gl = gl;\n    if (this.vrDisplay) {\n      this.passThroughCamera = vrDisplay.getPassThroughCamera();\n      this.program = getProgram(gl, vertexSource, fragmentSource);\n    }\n\n    gl.useProgram(this.program);\n\n    // Setup a quad\n    this.vertexPositionAttribute = gl.getAttribLocation(\n      this.program,\n      'aVertexPosition'\n    );\n    this.textureCoordAttribute = gl.getAttribLocation(\n      this.program,\n      'aTextureCoord'\n    );\n\n    this.samplerUniform = gl.getUniformLocation(this.program, 'uSampler');\n\n    this.vertexPositionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBuffer);\n    let vertices = [\n      -1.0,\n      1.0,\n      0.0,\n      -1.0,\n      -1.0,\n      0.0,\n      1.0,\n      1.0,\n      0.0,\n      1.0,\n      -1.0,\n      0.0,\n    ];\n    let f32Vertices = new Float32Array(vertices);\n    gl.bufferData(gl.ARRAY_BUFFER, f32Vertices, gl.STATIC_DRAW);\n    this.vertexPositionBuffer.itemSize = 3;\n    this.vertexPositionBuffer.numItems = 12;\n\n    this.textureCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.textureCoordBuffer);\n    // Precalculate different texture UV coordinates depending on the possible\n    // orientations of the device depending if there is a VRDisplay or not\n    let textureCoords = null;\n    if (this.vrDisplay) {\n      let u =\n        this.passThroughCamera.width / this.passThroughCamera.textureWidth;\n      let v =\n        this.passThroughCamera.height / this.passThroughCamera.textureHeight;\n      textureCoords = [\n        [0.0, 0.0, 0.0, v, u, 0.0, u, v],\n        [u, 0.0, 0.0, 0.0, u, v, 0.0, v],\n        [u, v, u, 0.0, 0.0, v, 0.0, 0.0],\n        [0.0, v, u, v, 0.0, 0.0, u, 0.0],\n      ];\n    } else {\n      textureCoords = [\n        [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0],\n        [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0],\n        [1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0],\n        [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0],\n      ];\n    }\n\n    this.f32TextureCoords = [];\n    for (let i = 0; i < textureCoords.length; i++) {\n      this.f32TextureCoords.push(new Float32Array(textureCoords[i]));\n    }\n    // Store the current combined orientation to check if it has changed\n    // during the update calls and use the correct texture coordinates.\n    this.combinedOrientation = combineOrientations(\n      screen.orientation.angle,\n      this.passThroughCamera.orientation\n    );\n\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      this.f32TextureCoords[this.combinedOrientation],\n      gl.STATIC_DRAW\n    );\n    this.textureCoordBuffer.itemSize = 2;\n    this.textureCoordBuffer.numItems = 8;\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n    this.indexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    let indices = [0, 1, 2, 2, 1, 3];\n    let ui16Indices = new Uint16Array(indices);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, ui16Indices, gl.STATIC_DRAW);\n    this.indexBuffer.itemSize = 1;\n    this.indexBuffer.numItems = 6;\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n    this.texture = gl.createTexture();\n    gl.useProgram(null);\n\n    // The projection matrix will be based on an identify orthographic camera\n    this.projectionMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    this.mvMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    return this;\n  }\n\n  /**\n   * Renders the quad\n   */\n  render() {\n    let gl = this.gl;\n    gl.useProgram(this.program);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexPositionBuffer);\n    gl.enableVertexAttribArray(this.vertexPositionAttribute);\n    gl.vertexAttribPointer(\n      this.vertexPositionAttribute,\n      this.vertexPositionBuffer.itemSize,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.textureCoordBuffer);\n\n    // Check the current orientation of the device combined with the\n    // orientation of the VRSeeThroughCamera to determine the correct UV\n    // coordinates to be used.\n    let combinedOrientation = combineOrientations(\n      screen.orientation.angle,\n      this.passThroughCamera.orientation\n    );\n    if (combinedOrientation !== this.combinedOrientation) {\n      this.combinedOrientation = combinedOrientation;\n      gl.bufferData(\n        gl.ARRAY_BUFFER,\n        this.f32TextureCoords[this.combinedOrientation],\n        gl.STATIC_DRAW\n      );\n    }\n    gl.enableVertexAttribArray(this.textureCoordAttribute);\n    gl.vertexAttribPointer(\n      this.textureCoordAttribute,\n      this.textureCoordBuffer.itemSize,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_EXTERNAL_OES, this.texture);\n    // Update the content of the texture in every frame.\n    gl.texImage2D(\n      gl.TEXTURE_EXTERNAL_OES,\n      0,\n      gl.RGB,\n      gl.RGB,\n      gl.UNSIGNED_BYTE,\n      this.passThroughCamera\n    );\n    gl.uniform1i(this.samplerUniform, 0);\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n\n    gl.drawElements(\n      gl.TRIANGLES,\n      this.indexBuffer.numItems,\n      gl.UNSIGNED_SHORT,\n      0\n    );\n\n    // Disable enabled states to allow other render calls to correctly work\n    gl.bindTexture(gl.TEXTURE_EXTERNAL_OES, null);\n    gl.disableVertexAttribArray(this.vertexPositionAttribute);\n    gl.disableVertexAttribArray(this.textureCoordAttribute);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.useProgram(null);\n  }\n}\n\n/**\n * A helper class that takes a VRDisplay with AR capabilities\n * and renders the see through camera to the passed in WebGLRenderer's\n * context.\n */\nclass ARView {\n  /**\n   * @param {VRDisplay} vrDisplay\n   * @param {THREE.WebGLRenderer} renderer\n   */\n  constructor(vrDisplay, renderer) {\n    this.vrDisplay = vrDisplay;\n    if (isARKit(this.vrDisplay)) {\n      return;\n    }\n    this.renderer = renderer;\n    this.gl = renderer.context;\n\n    this.videoRenderer = new ARVideoRenderer(vrDisplay, this.gl);\n    this._resetGLState();\n\n    // Cache the width/height so we're not potentially forcing\n    // a reflow if there's been a style invalidation\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    window.addEventListener('resize', this.onWindowResize.bind(this), false);\n  }\n\n  /**\n   * Updates the stored width/height of window on resize.\n   */\n  onWindowResize() {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n  }\n\n  /**\n   * Renders the see through camera to the passed in renderer\n   */\n  render() {\n    if (isARKit(this.vrDisplay)) {\n      return;\n    }\n\n    let gl = this.gl;\n    let dpr = window.devicePixelRatio;\n    let width = this.width * dpr;\n    let height = this.height * dpr;\n\n    if (gl.viewportWidth !== width) {\n      gl.viewportWidth = width;\n    }\n\n    if (gl.viewportHeight !== height) {\n      gl.viewportHeight = height;\n    }\n\n    this.gl.viewport(0, 0, gl.viewportWidth, gl.viewportHeight);\n    this.videoRenderer.render();\n    this._resetGLState();\n  }\n\n  /**\n   * Resets the GL state in the THREE.WebGLRenderer.\n   */\n  _resetGLState() {\n    if (typeof this.renderer.resetGLState === 'function') {\n      // If using three.js <= r86\n      this.renderer.resetGLState();\n    } else {\n      // If using three.js >= r87\n      this.renderer.state.reset();\n    }\n  }\n}\n\n\n// THREE.ARView = ARView;\nexport { ARView };\n","/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* eslint-disable */\n(function() {\n  if (window.webarSpeechRecognitionInstance) {\n\n    function addEventHandlingToObject(object) {\n      object.listeners = { };\n      object.addEventListener = function(eventType, callback) {\n        if (!callback) {\n          return this;\n        }\n        var listeners = this.listeners[eventType];\n        if (!listeners) {\n          this.listeners[eventType] = listeners = [];\n        }\n        if (listeners.indexOf(callback) < 0) {\n          listeners.push(callback);\n        }\n        return this;\n      };\n      object.removeEventListener = function(eventType, callback) {\n        if (!callback) {\n          return this;\n        }\n        var listeners = this.listeners[eventType];\n        if (listeners) {\n          var i = listeners.indexOf(callback);\n          if (i >= 0) {\n            this.listeners[eventType] = listeners.splice(i, 1);\n          }\n        }\n        return this;\n      };\n      object.callEventListeners = function(eventType, event) {\n        if (!event) {\n          event = { target : this };\n        }\n        if (!event.target) {\n          event.target = this;\n        }\n        event.type = eventType;\n        var onEventType = 'on' + eventType;\n        if (typeof(this[onEventType]) === 'function') {\n          this[onEventType](event)\n        }\n        var listeners = this.listeners[eventType];\n        if (listeners) {\n          for (var i = 0; i < listeners.length; i++) {\n            var typeofListener = typeof(listeners[i]);\n            if (typeofListener === 'object') {\n              listeners[i].handleEvent(event);\n            }\n            else if (typeofListener === 'function') {\n              listeners[i](event);\n            }\n          }\n        }\n        return this;\n      };\n    } \n\n    addEventHandlingToObject(window.webarSpeechRecognitionInstance);\n    var originalWebKitSpeechRecognition = window.webkitSpeechRecognition;\n    window.webkitSpeechRecognition = function() {\n      return window.webarSpeechRecognitionInstance;\n    };\n  }\n})();\n","/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: \"off\" */\n\nexport { ARDebug } from './ARDebug';\nexport { ARPerspectiveCamera } from './ARPerspectiveCamera';\nexport { ARReticle } from './ARReticle';\nexport { ARUtils } from './ARUtils';\nexport { ARView } from './ARView';\nimport './ARSpeechRecognition';\n"],"names":["DEFAULTS","SUCCESS_COLOR","FAILURE_COLOR","cachedVRDisplayMethods","Map","throttle","fn","timer","scope","lastFired","timeout","args","current","Date","until","undefined","apply","setTimeout","ARDebug","vrDisplay","config","Object","assign","_view","ARDebugView","open","showLastHit","hitTest","addRow","ARDebugHitTestRow","showPoseStatus","getFrameData","ARDebugPoseRow","close","getElement","rows","el","document","createElement","style","backgroundColor","padding","fontFamily","color","position","right","top","width","fontSize","zIndex","_rowsEl","transitionProperty","transitionDuration","transitionDelay","transitionTimingFunction","overflow","_controls","fontWeight","paddingTop","textAlign","cursor","addEventListener","toggleControls","bind","appendChild","_isOpen","maxHeight","textContent","row","enable","disable","id","set","ARDebugRow","title","borderTop","borderBottom","_titleEl","_dataEl","left","_dataElText","createTextNode","update","Error","value","isSuccess","nodeValue","_onHitTest","_nativeHitTest","get","_didPreviouslyHit","hit","mm","modelMatrix","toFixed","x","y","hits","call","t","parseInt","performance","now","didHit","length","_hitToString","_onGetFrameData","_nativeGetFrameData","_initialPose","pose","frameData","results","isValidPose","_poseToString","_lastPoseValid","ARPerspectiveCamera","fov","aspect","near","far","isARPerpsectiveCamera","updateProjectionMatrix","capabilities","hasPassThroughCamera","warn","projMatrix","getProjectionMatrix","projectionMatrix","fromArray","VRFrameData","leftProjectionMatrix","PerspectiveCamera","object_pattern","material_library_pattern","material_use_pattern","ParserState","state","name","fromDeclaration","object","previousMaterial","currentMaterial","_finalize","libraries","previous","inherited","groupCount","materials","splice","index","material","Array","isArray","smooth","groupEnd","cloned","mtllib","clone","push","end","lastMultiMaterial","geometry","vertices","groupStart","mi","declared","objects","len","a","b","c","src","dst","normals","uvs","ua","ub","uc","na","nb","nc","vLen","ia","parseVertexIndex","ib","ic","addVertex","uvLen","parseUVIndex","addUV","nLen","parseNormalIndex","addNormal","type","vi","l","addVertexLine","uvi","addUVLine","startObject","OBJLoader","manager","DefaultLoadingManager","url","onLoad","onProgress","onError","loader","FileLoader","setPath","path","load","text","parse","time","indexOf","replace","lines","split","line","lineFirstChar","lineLength","result","trimLeft","i","trim","charAt","data","parseFloat","lineData","substr","vertexData","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","addFace","lineParts","substring","lineVertices","lineUVs","li","llen","parts","addLineGeometry","exec","test","startMaterial","materialLibraries","toLowerCase","finalize","container","Group","concat","isLine","buffergeometry","BufferGeometry","addAttribute","BufferAttribute","Float32Array","computeVertexNormals","createdMaterials","miLen","sourceMaterial","create","LineBasicMaterial","materialLine","copy","MeshPhongMaterial","flatShading","mesh","addGroup","Mesh","LineSegments","add","timeEnd","MTLLoader","texturePath","setTexturePath","crossOrigin","materialOptions","info","delimiter_pattern","materialsInfo","pos","key","ss","materialCreator","MaterialCreator","setCrossOrigin","setManager","setMaterials","baseUrl","options","materialsArray","nameLookup","side","FrontSide","wrap","RepeatWrapping","convert","converted","mn","mat","covmat","prop","save","lprop","normalizeRGB","ignoreZeroRGBs","materialName","createMaterial_","params","resolveURL","setMapForType","mapType","texParams","getTextureParams","map","loadTexture","repeat","scale","offset","wrapS","wrapT","n","Color","specular","shininess","opacity","transparent","matParams","Vector2","items","bumpScale","join","mapping","texture","Loader","Handlers","TextureLoader","noop","loadObj","objPath","Promise","resolve","reject","loadMtl","pathChunks","mtlPath","LEARN_MORE_LINK","UNSUPPORTED_MESSAGE","ARUtils","isTango","display","displayName","includes","isARKit","isARDisplay","getARDisplay","navigator","getVRDisplays","then","displays","loadBlocksModel","THREE","p","preload","model","obj","children","applyMatrix","Matrix4","makeRotationY","Math","degToRad","tempPos","Vector3","tempQuat","Quaternion","tempScale","placeObjectAtHit","easing","applyOrientation","decompose","quaternion","lerp","slerp","displayUnsupportedMessage","element","background","border","margin","innerHTML","body","ARReticle","innerRadius","outerRadius","RingGeometry","MeshBasicMaterial","makeRotationX","visible","_planeDir","getShader","gl","str","shader","createShader","FRAGMENT_SHADER","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getProgram","vs","fs","vertexShader","fragmentShader","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","combineOrientations","screenOrientation","seeThroughCameraOrientation","seeThroughCameraOrientationIndex","screenOrientationIndex","ret","ARVideoRenderer","passThroughCamera","getPassThroughCamera","program","vertexSource","fragmentSource","useProgram","vertexPositionAttribute","getAttribLocation","textureCoordAttribute","samplerUniform","getUniformLocation","vertexPositionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","f32Vertices","bufferData","STATIC_DRAW","itemSize","numItems","textureCoordBuffer","textureCoords","u","textureWidth","v","height","textureHeight","f32TextureCoords","combinedOrientation","screen","orientation","angle","indexBuffer","ELEMENT_ARRAY_BUFFER","indices","ui16Indices","Uint16Array","createTexture","mvMatrix","enableVertexAttribArray","vertexAttribPointer","FLOAT","activeTexture","TEXTURE0","bindTexture","TEXTURE_EXTERNAL_OES","texImage2D","RGB","UNSIGNED_BYTE","uniform1i","drawElements","TRIANGLES","UNSIGNED_SHORT","disableVertexAttribArray","ARView","renderer","context","videoRenderer","_resetGLState","window","innerWidth","innerHeight","onWindowResize","dpr","devicePixelRatio","viewportWidth","viewportHeight","viewport","render","resetGLState","reset","webarSpeechRecognitionInstance","addEventHandlingToObject","listeners","eventType","callback","removeEventListener","callEventListeners","event","target","onEventType","typeofListener","handleEvent","webkitSpeechRecognition"],"mappings":"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"}